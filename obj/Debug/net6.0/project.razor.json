{
  "FilePath": "d:\\WebDev\\Projects\\blazor-pokedex\\Pokedex\\Pokedex.csproj",
  "Configuration": {
    "ConfigurationName": "Default",
    "LanguageVersion": "6.0",
    "Extensions": []
  },
  "ProjectWorkspaceState": {
    "TagHelpers": [
      {
        "HashCode": 955102642,
        "Kind": "Components.Component",
        "Name": "Pokedex.Shared.SurveyPrompt",
        "AssemblyName": "Pokedex",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SurveyPrompt"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pokedex.Shared.SurveyPrompt"
        }
      },
      {
        "HashCode": -2096907105,
        "Kind": "Components.Component",
        "Name": "Pokedex.Shared.SurveyPrompt",
        "AssemblyName": "Pokedex",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Pokedex.Shared.SurveyPrompt"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pokedex.Shared.SurveyPrompt",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1125046020,
        "Kind": "Components.Component",
        "Name": "Pokedex.Shared.Components.PokemonTypes",
        "AssemblyName": "Pokedex",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "PokemonTypes"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Types",
            "TypeName": "Pokedex.Models.PokemonType[]",
            "Metadata": {
              "Common.PropertyName": "Types"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pokedex.Shared.Components.PokemonTypes"
        }
      },
      {
        "HashCode": -614488241,
        "Kind": "Components.Component",
        "Name": "Pokedex.Shared.Components.PokemonTypes",
        "AssemblyName": "Pokedex",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Pokedex.Shared.Components.PokemonTypes"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Types",
            "TypeName": "Pokedex.Models.PokemonType[]",
            "Metadata": {
              "Common.PropertyName": "Types"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pokedex.Shared.Components.PokemonTypes",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1529107114,
        "Kind": "Components.Component",
        "Name": "Pokedex.Shared.Components.PokemonCard",
        "AssemblyName": "Pokedex",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "PokemonCard"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Url",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Url"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pokedex.Shared.Components.PokemonCard"
        }
      },
      {
        "HashCode": -975990288,
        "Kind": "Components.Component",
        "Name": "Pokedex.Shared.Components.PokemonCard",
        "AssemblyName": "Pokedex",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Pokedex.Shared.Components.PokemonCard"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Url",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Url"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pokedex.Shared.Components.PokemonCard",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1499634325,
        "Kind": "Components.Component",
        "Name": "Pokedex.Shared.NavMenu",
        "AssemblyName": "Pokedex",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NavMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pokedex.Shared.NavMenu"
        }
      },
      {
        "HashCode": -1379647077,
        "Kind": "Components.Component",
        "Name": "Pokedex.Shared.NavMenu",
        "AssemblyName": "Pokedex",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Pokedex.Shared.NavMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pokedex.Shared.NavMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1958382261,
        "Kind": "Components.Component",
        "Name": "Pokedex.Shared.MainLayout",
        "AssemblyName": "Pokedex",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MainLayout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pokedex.Shared.MainLayout"
        }
      },
      {
        "HashCode": 318299602,
        "Kind": "Components.Component",
        "Name": "Pokedex.Shared.MainLayout",
        "AssemblyName": "Pokedex",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Pokedex.Shared.MainLayout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pokedex.Shared.MainLayout",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 440094337,
        "Kind": "Components.ChildContent",
        "Name": "Pokedex.Shared.MainLayout.Body",
        "AssemblyName": "Pokedex",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "MainLayout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Pokedex.Shared.MainLayout.Body",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -44852993,
        "Kind": "Components.ChildContent",
        "Name": "Pokedex.Shared.MainLayout.Body",
        "AssemblyName": "Pokedex",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "Pokedex.Shared.MainLayout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Pokedex.Shared.MainLayout.Body",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 492155604,
        "Kind": "Components.Component",
        "Name": "Pokedex.App",
        "AssemblyName": "Pokedex",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "App"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pokedex.App"
        }
      },
      {
        "HashCode": 264224398,
        "Kind": "Components.Component",
        "Name": "Pokedex.App",
        "AssemblyName": "Pokedex",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Pokedex.App"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pokedex.App",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1050163090,
        "Kind": "Components.Component",
        "Name": "Pokedex.Pages.Counter",
        "AssemblyName": "Pokedex",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Counter"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pokedex.Pages.Counter"
        }
      },
      {
        "HashCode": -1503124465,
        "Kind": "Components.Component",
        "Name": "Pokedex.Pages.Counter",
        "AssemblyName": "Pokedex",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Pokedex.Pages.Counter"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pokedex.Pages.Counter",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1026452481,
        "Kind": "Components.Component",
        "Name": "Pokedex.Pages.Index",
        "AssemblyName": "Pokedex",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Index"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pokedex.Pages.Index"
        }
      },
      {
        "HashCode": -1970209027,
        "Kind": "Components.Component",
        "Name": "Pokedex.Pages.Index",
        "AssemblyName": "Pokedex",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Pokedex.Pages.Index"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pokedex.Pages.Index",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -710356352,
        "Kind": "Components.Component",
        "Name": "Pokedex.Pages.PokemonDetails",
        "AssemblyName": "Pokedex",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "PokemonDetails"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Identifier",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Identifier"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pokedex.Pages.PokemonDetails"
        }
      },
      {
        "HashCode": 1428163216,
        "Kind": "Components.Component",
        "Name": "Pokedex.Pages.PokemonDetails",
        "AssemblyName": "Pokedex",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Pokedex.Pages.PokemonDetails"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Identifier",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Identifier"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pokedex.Pages.PokemonDetails",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 48792744,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CascadingValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            The value to be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsFixed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsFixed"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 440461086,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.CascadingValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            The value to be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsFixed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsFixed"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -996825343,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CascadingValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -51837767,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.CascadingValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1620371390,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.DynamicComponent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that renders another component dynamically according to its\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DynamicComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the component to be rendered. The supplied type must\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Parameters",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a dictionary of parameters to be passed to the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Parameters"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.DynamicComponent"
        }
      },
      {
        "HashCode": -905110905,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.DynamicComponent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that renders another component dynamically according to its\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.DynamicComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the component to be rendered. The supplied type must\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Parameters",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a dictionary of parameters to be passed to the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Parameters"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.DynamicComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1029242939,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.LayoutView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LayoutView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Layout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Layout"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView"
        }
      },
      {
        "HashCode": -1924852180,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.LayoutView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.LayoutView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Layout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Layout"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1379584995,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "LayoutView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1983860588,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.LayoutView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1651737980,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.RouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.RouteView"
        }
      },
      {
        "HashCode": -772227696,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.RouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.RouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.RouteView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -973410997,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AppAssembly",
            "TypeName": "System.Reflection.Assembly",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppAssembly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAssemblies",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAssemblies"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotFound",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotFound",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Found",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Found",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Navigating",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Navigating",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnNavigateAsync",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>",
            "Documentation": "\n            <summary>\n            Gets or sets a handler that should be called before navigating to a new page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnNavigateAsync",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PreferExactMatches",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\n            over wildcards.\n            <para>This property is obsolete and configuring it does nothing.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PreferExactMatches"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router"
        }
      },
      {
        "HashCode": -1326597675,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AppAssembly",
            "TypeName": "System.Reflection.Assembly",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppAssembly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAssemblies",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAssemblies"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotFound",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotFound",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Found",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Found",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Navigating",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Navigating",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnNavigateAsync",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>",
            "Documentation": "\n            <summary>\n            Gets or sets a handler that should be called before navigating to a new page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnNavigateAsync",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PreferExactMatches",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\n            over wildcards.\n            <para>This property is obsolete and configuring it does nothing.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PreferExactMatches"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1302982040,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotFound",
            "ParentTag": "Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -674993296,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotFound",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -265429664,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Found",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Found",
            "ParentTag": "Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Found' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -589732390,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Found",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Found",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Found' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1582381951,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Navigating",
            "ParentTag": "Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1422171330,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Navigating",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2143112306,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
        "AssemblyName": "Microsoft.AspNetCore.Components.Forms",
        "Documentation": "\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DataAnnotationsValidator"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"
        }
      },
      {
        "HashCode": -1662304119,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
        "AssemblyName": "Microsoft.AspNetCore.Components.Forms",
        "Documentation": "\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1787027276,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Documentation": "\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditContext"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnValidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnValidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm"
        }
      },
      {
        "HashCode": -183621899,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Documentation": "\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditContext"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnValidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnValidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1181084325,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 927557221,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1958280650,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
        }
      },
      {
        "HashCode": 1449968374,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -521450673,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputDate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.InputDateType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of HTML input to be rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1561194239,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.InputDateType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of HTML input to be rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 229828185,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputFile",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputFile"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputFile"
        }
      },
      {
        "HashCode": -917515058,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputFile",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputFile"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputFile",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1402500532,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputNumber"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1358241537,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -485650676,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component used for selecting a value from a group of choices.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputRadio"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of this input.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the parent input radio group.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 234107016,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component used for selecting a value from a group of choices.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadio"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of this input.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the parent input radio group.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1859068981,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the group.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 694067284,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the group.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -155086425,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "InputRadioGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1965087103,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1973046525,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1438937553,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 261443108,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "InputSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1239213134,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.InputSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -278995715,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText"
        }
      },
      {
        "HashCode": -209348843,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -813408854,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputTextArea"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
        }
      },
      {
        "HashCode": 1308113006,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 392940340,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValidationMessage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "For",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 661747374,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "For",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1485218175,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValidationSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary"
        }
      },
      {
        "HashCode": 627464759,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1105131610,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            After navigating from one page to another, sets focus to an element\n            matching a CSS selector. This can be used to build an accessible\n            navigation system compatible with screen readers.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FocusOnNavigate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This can be obtained from an enclosing\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selector",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a CSS selector describing the element to be focused after\n            navigation between pages.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selector"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate"
        }
      },
      {
        "HashCode": -743029610,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            After navigating from one page to another, sets focus to an element\n            matching a CSS selector. This can be used to build an accessible\n            navigation system compatible with screen readers.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This can be obtained from an enclosing\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selector",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a CSS selector describing the element to be focused after\n            navigation between pages.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selector"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -929214259,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NavLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ActiveClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ActiveClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Match"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink"
        }
      },
      {
        "HashCode": -1151473158,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.NavLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ActiveClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ActiveClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Match"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2086652847,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "NavLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2135747778,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.NavLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1792079460,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeadContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent"
        }
      },
      {
        "HashCode": 1511951094,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Web.HeadContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -959553587,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "HeadContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1228719751,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.HeadContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1244226465,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeadOutlet"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadOutlet"
        }
      },
      {
        "HashCode": -2127320754,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Web.HeadOutlet"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2083840295,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.PageTitle",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "PageTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle"
        }
      },
      {
        "HashCode": -242440412,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.PageTitle",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Web.PageTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 159156357,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "PageTitle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1967412934,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.PageTitle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 847491207,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Captures errors thrown from its child content.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ErrorBoundary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ErrorContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Exception>",
            "Documentation": "\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ErrorContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumErrorCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            The maximum number of errors that can be handled. If more errors are received,\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumErrorCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary"
        }
      },
      {
        "HashCode": -1259565362,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Captures errors thrown from its child content.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ErrorContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Exception>",
            "Documentation": "\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ErrorContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumErrorCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            The maximum number of errors that can be handled. If more errors are received,\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumErrorCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1128721280,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ErrorBoundary"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1764108971,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.ErrorBoundary"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 506031594,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ErrorContent",
            "ParentTag": "ErrorBoundary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ErrorContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -785010680,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ErrorContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.ErrorBoundary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ErrorContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -392711868,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Provides functionality for rendering a virtualized list of items.\n            </summary>\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
            "Documentation": "\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemSize",
            "TypeName": "System.Single",
            "Documentation": "\n            <summary>\n            Gets the size of each item in pixels. Defaults to 50px.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemsProvider",
            "TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the function providing items to the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemsProvider",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.ICollection<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the fixed item source.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OverscanCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets a value that determines how many additional items will be rendered\n            before and after the visible region. This help to reduce the frequency of rendering\n            during scrolling. However, higher values mean that more elements will be present\n            in the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OverscanCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 295635629,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Provides functionality for rendering a virtualized list of items.\n            </summary>\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
            "Documentation": "\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemSize",
            "TypeName": "System.Single",
            "Documentation": "\n            <summary>\n            Gets the size of each item in pixels. Defaults to 50px.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemsProvider",
            "TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the function providing items to the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemsProvider",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.ICollection<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the fixed item source.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OverscanCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets a value that determines how many additional items will be rendered\n            before and after the visible region. This help to reduce the frequency of rendering\n            during scrolling. However, higher values mean that more elements will be present\n            in the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OverscanCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1982584176,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1439075145,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1314697657,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemContent",
            "ParentTag": "Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1824941935,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1546108698,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Placeholder",
            "ParentTag": "Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Placeholder' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1296962402,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Placeholder",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Placeholder' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1742906376,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatComponentHost",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatComponentHost"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatComponentHost"
        }
      },
      {
        "HashCode": 129450583,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatComponentHost",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatComponentHost"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatComponentHost",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -230371082,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAccordion",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAccordion"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multi",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Multi"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideToggle",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Hides toggle icon for all expansion panel summaries in the accordion\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HideToggle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LazyRendering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables lazy rendering for all expansion panel details in the accordion.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LazyRendering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAccordion"
        }
      },
      {
        "HashCode": -1358345174,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAccordion",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAccordion"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multi",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Multi"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideToggle",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Hides toggle icon for all expansion panel summaries in the accordion\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HideToggle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LazyRendering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables lazy rendering for all expansion panel details in the accordion.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LazyRendering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAccordion",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1418041670,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAccordion.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAccordion"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAccordion.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1424240647,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAccordion.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAccordion"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAccordion.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -194678446,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanel",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatExpansionPanel provides an expandable details-summary view.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatExpansionPanel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideToggle",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Hides the toggle icon in the expansion panel summary\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HideToggle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LazyRendering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables lazy rendering of the expansion panel details.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LazyRendering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanel"
        }
      },
      {
        "HashCode": 1438007836,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanel",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatExpansionPanel provides an expandable details-summary view.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatExpansionPanel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideToggle",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Hides the toggle icon in the expansion panel summary\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HideToggle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LazyRendering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables lazy rendering of the expansion panel details.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LazyRendering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanel",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -223421972,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanel.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatExpansionPanel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 90688075,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanel.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatExpansionPanel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1957221758,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelDetails",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatExpansionPanelDetails"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelDetails"
        }
      },
      {
        "HashCode": 1521173054,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelDetails",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatExpansionPanelDetails"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelDetails",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -995563578,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelDetails.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatExpansionPanelDetails"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelDetails.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2047244074,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelDetails.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatExpansionPanelDetails"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelDetails.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 721405768,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatExpansionPanelHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelHeader"
        }
      },
      {
        "HashCode": -1284064330,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatExpansionPanelHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2074407396,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatExpansionPanelHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1082968738,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatExpansionPanelHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -413982067,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelSubHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatExpansionPanelSubHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSubHeader"
        }
      },
      {
        "HashCode": 347744538,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelSubHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatExpansionPanelSubHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSubHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1643927570,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelSubHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatExpansionPanelSubHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSubHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 824367490,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelSubHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatExpansionPanelSubHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSubHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1757020229,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelSummary",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatExpansionPanelSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSummary"
        }
      },
      {
        "HashCode": 210628838,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelSummary",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatExpansionPanelSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSummary",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -943801041,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelSummary.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatExpansionPanelSummary"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSummary.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1060114347,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelSummary.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatExpansionPanelSummary"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSummary.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 544310047,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAnchorContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAnchorContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAnchorContainer"
        }
      },
      {
        "HashCode": -1733376994,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAnchorContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAnchorContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAnchorContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1630575925,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAnchorContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAnchorContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAnchorContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1797031974,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAnchorContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAnchorContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAnchorContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1024791247,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAnchorLink",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAnchorLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAnchorLink"
        }
      },
      {
        "HashCode": -400044610,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAnchorLink",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAnchorLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAnchorLink",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 169862716,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAnchorLink.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAnchorLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAnchorLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 467718371,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAnchorLink.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAnchorLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAnchorLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1191926428,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAnchorUtils",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAnchorUtils"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAnchorUtils"
        }
      },
      {
        "HashCode": -245647105,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAnchorUtils",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAnchorUtils"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAnchorUtils",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -479347996,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAnchorUtils.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAnchorUtils"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAnchorUtils.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -489034007,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAnchorUtils.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAnchorUtils"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAnchorUtils.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 47554515,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Acts as a container for items such as application title, navigation icon, and action items.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Short",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Short"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fixed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Fixed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBar"
        }
      },
      {
        "HashCode": 329990604,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Acts as a container for items such as application title, navigation icon, and action items.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Short",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Short"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fixed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Fixed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -256343127,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAppBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -267929982,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAppBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 309108579,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarAction",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarAction"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarAction"
        }
      },
      {
        "HashCode": 1969586103,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarAction",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarAction"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarAction",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -328030920,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarAction.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAppBarAction"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarAction.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 31102308,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarAction.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAppBarAction"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarAction.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 546261027,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarAdjust",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarAdjust"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarAdjust"
        }
      },
      {
        "HashCode": -1251182162,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarAdjust",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarAdjust"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarAdjust",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1686683754,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarContainer"
        }
      },
      {
        "HashCode": 685434568,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 341999038,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAppBarContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1351097135,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAppBarContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 803359600,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarContent"
        }
      },
      {
        "HashCode": -486554603,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1311936212,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAppBarContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1717452533,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAppBarContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1032377515,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarNavigationIcon",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarNavigationIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarNavigationIcon"
        }
      },
      {
        "HashCode": -472248148,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarNavigationIcon",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarNavigationIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarNavigationIcon",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1789297201,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarRow"
        }
      },
      {
        "HashCode": 896220057,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1152004983,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAppBarRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2128999130,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAppBarRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1010982277,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarSection",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarSection"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Align",
            "TypeName": "MatBlazor.MatAppBarSectionAlign",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Align"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarSection"
        }
      },
      {
        "HashCode": 1849732247,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarSection",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarSection"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Align",
            "TypeName": "MatBlazor.MatAppBarSectionAlign",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Align"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarSection",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1593309714,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarSection.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAppBarSection"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarSection.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1218286386,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarSection.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAppBarSection"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarSection.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1912447406,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarTitle",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarTitle"
        }
      },
      {
        "HashCode": -1944428105,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarTitle",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarTitle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1984285811,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarTitle.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAppBarTitle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarTitle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1333529675,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarTitle.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAppBarTitle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarTitle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -690798318,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The autocomplete is a normal text input enhanced by a panel of suggested options.\n            </summary>\n            <typeparam name=\"TItem\">Type of element type.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatAutocompleteList<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The label of the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The Icon displayed as the leading icon for the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StringValue",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The StringValue displayed in the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StringValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TItem",
            "Documentation": "\n            <summary>\n            The value to be used to pre-select an item from the list\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            ValueChanged is fired when the value is selected(by clicking on an element in the popup)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomStringSelector",
            "TypeName": "System.Func<TItem, System.String>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CustomStringSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            The collection which should be rendered and filtered\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If this parameter is true then the style of the textbox is outlined see `MatTextfield`\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnOpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            OnOpenedChanged is fired when the popup dialog is opened or close and the parameter indicates whenever is it open, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnOpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnTextChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            OnTextChanged is fired when the string value is changed(when an input occurs in the textfield or when an item is selected)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnTextChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowClearButton",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the clear button(using a trailing icon) should be displayed, which can clear the entire text and the selected value), the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the textfield and the dialog will be or not displayed in the full screen, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatAutocompleteList<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 873044799,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The autocomplete is a normal text input enhanced by a panel of suggested options.\n            </summary>\n            <typeparam name=\"TItem\">Type of element type.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatAutocompleteList<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The label of the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The Icon displayed as the leading icon for the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StringValue",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The StringValue displayed in the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StringValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TItem",
            "Documentation": "\n            <summary>\n            The value to be used to pre-select an item from the list\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            ValueChanged is fired when the value is selected(by clicking on an element in the popup)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomStringSelector",
            "TypeName": "System.Func<TItem, System.String>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CustomStringSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            The collection which should be rendered and filtered\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If this parameter is true then the style of the textbox is outlined see `MatTextfield`\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnOpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            OnOpenedChanged is fired when the popup dialog is opened or close and the parameter indicates whenever is it open, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnOpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnTextChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            OnTextChanged is fired when the string value is changed(when an input occurs in the textfield or when an item is selected)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnTextChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowClearButton",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the clear button(using a trailing icon) should be displayed, which can clear the entire text and the selected value), the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the textfield and the dialog will be or not displayed in the full screen, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatAutocompleteList<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 798832130,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatAutocompleteList<TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "BaseMatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatAutocompleteList<TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 596808544,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatAutocompleteList<TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.BaseMatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatAutocompleteList<TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 294384860,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 292353739,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1407544066,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "BaseMatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -485772787,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.BaseMatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2132252944,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatAutocomplete"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -358510791,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatAutocomplete"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1673684453,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatButtonLink",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatButtonLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Link to a url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Raised",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has raised style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Raised"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unelevated",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has unelevated style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Unelevated"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has outlined style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has dense style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the link's icon.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies if icon has trailing position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatButtonLink"
        }
      },
      {
        "HashCode": -642083442,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatButtonLink",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatButtonLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Link to a url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Raised",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has raised style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Raised"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unelevated",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has unelevated style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Unelevated"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has outlined style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has dense style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the link's icon.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies if icon has trailing position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatButtonLink",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -569924203,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatButtonLink.ChildContent",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatButtonLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatButtonLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -250596423,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatButtonLink.ChildContent",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatButtonLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatButtonLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -376234538,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Buttons communicate an action a user can take.\n            They are typically placed throughout your UI, in places like dialogs, forms, cards, and toolbars.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n            Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Link",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Link to a url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Link"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Raised",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has raised style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Raised"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unelevated",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has unelevated style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Unelevated"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has outlined style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has dense style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an button's icon.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies if icon has trailing position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Text label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatButton"
        }
      },
      {
        "HashCode": -1652958099,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Buttons communicate an action a user can take.\n            They are typically placed throughout your UI, in places like dialogs, forms, cards, and toolbars.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n            Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Link",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Link to a url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Link"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Raised",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has raised style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Raised"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unelevated",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has unelevated style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Unelevated"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has outlined style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has dense style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an button's icon.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies if icon has trailing position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Text label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatButton",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 987361314,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatButton.ChildContent",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1013293447,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatButton.ChildContent",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 277433366,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCard",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Card component for Blazor contain content and actions about a single subject. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCard"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCard"
        }
      },
      {
        "HashCode": 1709641602,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCard",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Card component for Blazor contain content and actions about a single subject. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCard"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCard",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1492803622,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCard.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCard"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCard.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 228416250,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCard.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCard"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCard.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1732141825,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardActionButtons",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCardActionButtons"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardActionButtons"
        }
      },
      {
        "HashCode": -555245552,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardActionButtons",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCardActionButtons"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardActionButtons",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1092170022,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardActionButtons.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCardActionButtons"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardActionButtons.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1399174040,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardActionButtons.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCardActionButtons"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardActionButtons.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1508244759,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardActionIcons",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCardActionIcons"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardActionIcons"
        }
      },
      {
        "HashCode": 2008426315,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardActionIcons",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCardActionIcons"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardActionIcons",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1525561701,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardActionIcons.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCardActionIcons"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardActionIcons.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1439762734,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardActionIcons.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCardActionIcons"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardActionIcons.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1134563139,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardActions",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCardActions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardActions"
        }
      },
      {
        "HashCode": -534458873,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardActions",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCardActions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardActions",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1417157689,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardActions.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCardActions"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardActions.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1325571771,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardActions.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCardActions"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardActions.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 901283378,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCardContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unbounded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Unbounded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardContent"
        }
      },
      {
        "HashCode": -1805666747,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCardContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unbounded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Unbounded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1322346982,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCardContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -110499811,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCardContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1751273798,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardMedia",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCardMedia"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Square",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Square"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Wide",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Wide"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContentClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ContentClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ImageUrl",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ImageUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardMedia"
        }
      },
      {
        "HashCode": -1390579034,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardMedia",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCardMedia"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Square",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Square"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Wide",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Wide"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContentClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ContentClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ImageUrl",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ImageUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardMedia",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 963818695,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardMedia.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCardMedia"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardMedia.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1052785306,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardMedia.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCardMedia"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardMedia.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 707338372,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design Checkboxes for Blazor, allow the user to select multiple options from a set. \n            </summary>\n            <typeparam name=\"TValue\">bool, bool?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatCheckboxInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatCheckboxInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputValue",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "InputValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatCheckboxInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1493352923,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design Checkboxes for Blazor, allow the user to select multiple options from a set. \n            </summary>\n            <typeparam name=\"TValue\">bool, bool?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatCheckboxInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatCheckboxInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputValue",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "InputValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatCheckboxInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1579182614,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatCheckboxInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatCheckboxInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatCheckboxInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1731193025,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatCheckboxInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatCheckboxInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatCheckboxInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 20448803,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCheckbox<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatCheckbox<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputValue",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "InputValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCheckbox<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 454072838,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCheckbox<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatCheckbox<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputValue",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "InputValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCheckbox<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1800598500,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCheckbox<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCheckbox"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCheckbox<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 644514522,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCheckbox<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCheckbox"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCheckbox<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1693867888,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatChipSet",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatChipSet"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Choice",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Allows single selection from a set of options. If combined with Filter the selected value can be unselected.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Choice"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Filter",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n             Enables multiple-choice selection from the set of chips. Chips must be \"Checkable\" for this to work.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Filter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChip",
            "TypeName": "MatBlazor.MatChip",
            "Metadata": {
              "Common.PropertyName": "SelectedChip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChipChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>",
            "Metadata": {
              "Common.PropertyName": "SelectedChipChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChips",
            "TypeName": "MatBlazor.MatChip[]",
            "Metadata": {
              "Common.PropertyName": "SelectedChips"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChipsChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip[]>",
            "Metadata": {
              "Common.PropertyName": "SelectedChipsChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatChipSet"
        }
      },
      {
        "HashCode": 135407482,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatChipSet",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatChipSet"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Choice",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Allows single selection from a set of options. If combined with Filter the selected value can be unselected.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Choice"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Filter",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n             Enables multiple-choice selection from the set of chips. Chips must be \"Checkable\" for this to work.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Filter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChip",
            "TypeName": "MatBlazor.MatChip",
            "Metadata": {
              "Common.PropertyName": "SelectedChip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChipChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>",
            "Metadata": {
              "Common.PropertyName": "SelectedChipChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChips",
            "TypeName": "MatBlazor.MatChip[]",
            "Metadata": {
              "Common.PropertyName": "SelectedChips"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChipsChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip[]>",
            "Metadata": {
              "Common.PropertyName": "SelectedChipsChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatChipSet",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1133847495,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatChipSet.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatChipSet"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatChipSet.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 298395200,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatChipSet.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatChipSet"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatChipSet.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -42686807,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatChip",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Chips are compact elements that allow users to enter information, select a choice, filter content, or trigger an action.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatChip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "LeadingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Optional icon, displayed before the label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LeadingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A trailing icon comes with the functionality to remove the chip from the set, so the natural value for this would be \"clear\".\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIconClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>",
            "Metadata": {
              "Common.PropertyName": "TrailingIconClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The chip's text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            A user-defined value assigned to the chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSelected",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n             Reflects the selection state of a choice- or filter-chip (parent chipset has either Choice or Filter set to true).\n            \n             When you set this in markup, it pre-selects the chip.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsSelected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Allows two-way binding of IsSelected\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsSelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsCheckable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Checkable chips show a check-mark when selected\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsCheckable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatChip"
        }
      },
      {
        "HashCode": -268577988,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatChip",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Chips are compact elements that allow users to enter information, select a choice, filter content, or trigger an action.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatChip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "LeadingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Optional icon, displayed before the label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LeadingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A trailing icon comes with the functionality to remove the chip from the set, so the natural value for this would be \"clear\".\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIconClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>",
            "Metadata": {
              "Common.PropertyName": "TrailingIconClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The chip's text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            A user-defined value assigned to the chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSelected",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n             Reflects the selection state of a choice- or filter-chip (parent chipset has either Choice or Filter set to true).\n            \n             When you set this in markup, it pre-selects the chip.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsSelected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Allows two-way binding of IsSelected\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsSelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsCheckable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Checkable chips show a check-mark when selected\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsCheckable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatChip",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1762677188,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDataTableColumnOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatDataTableColumnOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Func<TItem, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Sort",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Sort"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDataTableColumnOld<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 964377020,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDataTableColumnOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatDataTableColumnOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Func<TItem, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Sort",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Sort"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDataTableColumnOld<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 347575779,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDataTableColumnOld<TItem>.Template",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "BaseMatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDataTableColumnOld<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1717677383,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDataTableColumnOld<TItem>.Template",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "MatBlazor.BaseMatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDataTableColumnOld<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1308930485,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDataTableColumnOld<TItem>.HeaderTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "BaseMatDataTableColumnOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDataTableColumnOld<TItem>.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1722830858,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDataTableColumnOld<TItem>.HeaderTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "MatBlazor.BaseMatDataTableColumnOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDataTableColumnOld<TItem>.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1183699262,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDataTableOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDataTableOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatDataTableOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StickyHeader",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "StickyHeader"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VirtualScroll",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "VirtualScroll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Paginator",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Paginator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDataTableOld<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1618596224,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDataTableOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDataTableOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatDataTableOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StickyHeader",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "StickyHeader"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VirtualScroll",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "VirtualScroll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Paginator",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Paginator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDataTableOld<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1462756968,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDataTableOld<TItem>.Columns",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "BaseMatDataTableOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDataTableOld<TItem>.Columns",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1227053395,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDataTableOld<TItem>.Columns",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "MatBlazor.BaseMatDataTableOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDataTableOld<TItem>.Columns",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1252674571,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTable",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTable"
        }
      },
      {
        "HashCode": -1652439963,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTable",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTable",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2122714268,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTable.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDataTable"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTable.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -638040871,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTable.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDataTable"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTable.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1612198503,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableColumn",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableColumn"
        }
      },
      {
        "HashCode": 2138447473,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableColumn",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableColumn",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -111650641,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableContent<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableContent<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableContent<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1973456552,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableContent<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableContent<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableContent<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -549620746,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableContent<TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDataTableContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableContent<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1815739466,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableContent<TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDataTableContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableContent<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -403447773,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDatePicker<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDatePicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatDatePicker<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTime",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableSeconds",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableSeconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableCalendar",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableCalendar"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable24hours",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enable24hours"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableWeekNumbers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableWeekNumbers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableMobile",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableMobile"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatDatePickerPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Locale",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Locale"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDatePicker<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -702047398,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDatePicker<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDatePicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatDatePicker<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTime",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableSeconds",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableSeconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableCalendar",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableCalendar"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable24hours",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enable24hours"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableWeekNumbers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableWeekNumbers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableMobile",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableMobile"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatDatePickerPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Locale",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Locale"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDatePicker<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1502116724,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDatePicker<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDatePicker"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDatePicker<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -972239036,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDatePicker<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDatePicker"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDatePicker<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1833169854,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDialog",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Dialogs inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDialog"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Event occurs when the dialog is opened or closed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CanBeClosed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Indicates if the user is able to close the dialog via Escape or click on the Scrim.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CanBeClosed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceStyle",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDialog"
        }
      },
      {
        "HashCode": 726195573,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDialog",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Dialogs inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDialog"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Event occurs when the dialog is opened or closed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CanBeClosed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Indicates if the user is able to close the dialog via Escape or click on the Scrim.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CanBeClosed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceStyle",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDialog",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1677513236,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDialog.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatDialog"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDialog.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1503133885,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDialog.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatDialog"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDialog.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -572460178,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDivider",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatDivider is a component that allows for Material styling of a line separator with various orientation options. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDivider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Inset",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Inset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Padded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Padded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDivider"
        }
      },
      {
        "HashCode": -1633089875,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDivider",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatDivider is a component that allows for Material styling of a line separator with various orientation options. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDivider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Inset",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Inset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Padded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Padded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDivider",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1148216198,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDrawerContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDrawerContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DrawerWidth",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DrawerWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContainer"
        }
      },
      {
        "HashCode": 1426641302,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDrawerContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDrawerContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DrawerWidth",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DrawerWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -774468950,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDrawerContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatDrawerContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -568076796,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDrawerContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatDrawerContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1354690610,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDrawerContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDrawerContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContent"
        }
      },
      {
        "HashCode": -649145584,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDrawerContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDrawerContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -102157612,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDrawerContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatDrawerContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -564458772,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDrawerContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatDrawerContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1769174158,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDrawer",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The navigation drawer slides in from the left and contains the navigation destinations for your app.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDrawer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "MatBlazor.MatDrawerMode",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContentTabIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ContentTabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opened",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Opened"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "OpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDrawer"
        }
      },
      {
        "HashCode": 1077400474,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDrawer",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The navigation drawer slides in from the left and contains the navigation destinations for your app.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDrawer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "MatBlazor.MatDrawerMode",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContentTabIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ContentTabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opened",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Opened"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "OpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDrawer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 67716842,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDrawer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatDrawer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDrawer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -206257845,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDrawer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatDrawer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDrawer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1094964225,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatFAB",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            A floating action button represents the primary action in an application.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatFAB"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mini",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Mini"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatFAB"
        }
      },
      {
        "HashCode": -1348909554,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatFAB",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            A floating action button represents the primary action in an application.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatFAB"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mini",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Mini"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatFAB",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 29673061,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatFAB.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatFAB"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatFAB.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1389084273,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatFAB.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatFAB"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatFAB.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1712116439,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatFileUpload",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatFileUpload"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.IMatFileUploadEntry[]>",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowMultiple",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowMultiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageLength",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatFileUpload"
        }
      },
      {
        "HashCode": 1567971692,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatFileUpload",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatFileUpload"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.IMatFileUploadEntry[]>",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowMultiple",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowMultiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageLength",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatFileUpload",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 29640732,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatHelperText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatHelperText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CharacterCount",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CharacterCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatHelperText"
        }
      },
      {
        "HashCode": 1106697683,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatHelperText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatHelperText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CharacterCount",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CharacterCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatHelperText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1031638428,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatHidden",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Quickly and responsively toggle the visibility value of components and more with our hidden utilities.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatHidden"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ElseContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ElseContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InitContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "InitContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Breakpoint",
            "TypeName": "MatBlazor.MatBreakpoint",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Breakpoint"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatHiddenDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HiddenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "HiddenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatHidden"
        }
      },
      {
        "HashCode": 1415744792,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatHidden",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Quickly and responsively toggle the visibility value of components and more with our hidden utilities.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatHidden"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ElseContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ElseContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InitContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "InitContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Breakpoint",
            "TypeName": "MatBlazor.MatBreakpoint",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Breakpoint"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatHiddenDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HiddenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "HiddenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatHidden",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 725613759,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatHidden.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatHidden.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -956109701,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatHidden.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatHidden.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 449436412,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatHidden.ElseContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ElseContent",
            "ParentTag": "BaseMatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatHidden.ElseContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1057089756,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatHidden.ElseContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ElseContent",
            "ParentTag": "MatBlazor.BaseMatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatHidden.ElseContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 25064302,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatHidden.InitContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InitContent",
            "ParentTag": "BaseMatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatHidden.InitContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1369459541,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatHidden.InitContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InitContent",
            "ParentTag": "MatBlazor.BaseMatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatHidden.InitContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -455143939,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatIconButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Icons are appropriate for buttons that allow a user to take actions or make a selection, such as adding or removing a star to an item.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatIconButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Default Button Icon\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggleIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Icon to use when Button is clicked\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ToggleIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Toggled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Toggled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggledChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ToggledChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Link",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Navigate to this url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Link"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n             Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatIconButton"
        }
      },
      {
        "HashCode": 1253358762,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatIconButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Icons are appropriate for buttons that allow a user to take actions or make a selection, such as adding or removing a star to an item.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatIconButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Default Button Icon\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggleIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Icon to use when Button is clicked\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ToggleIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Toggled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Toggled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggledChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ToggledChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Link",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Navigate to this url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Link"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n             Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatIconButton",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 900679196,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatIconButton.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatIconButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatIconButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1698473358,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatIconButton.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatIconButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatIconButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -758489096,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatIcon",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Makes it easier to use vector-based icons in your app.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatIcon"
        }
      },
      {
        "HashCode": 1585535028,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatIcon",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Makes it easier to use vector-based icons in your app.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatIcon",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1793763732,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatIcon.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatIcon"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatIcon.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -896208938,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatIcon.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatIcon"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatIcon.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1081303840,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatListGroup",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatListGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatListGroup"
        }
      },
      {
        "HashCode": 1533319433,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatListGroup",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatListGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatListGroup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 355319926,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatListGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatListGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatListGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1688985319,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatListGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatListGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatListGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -207112964,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatList",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Lists present multiple line items vertically as a single continuous element. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SingleSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "SingleSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TwoLine",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TwoLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatList"
        }
      },
      {
        "HashCode": -616491626,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatList",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Lists present multiple line items vertically as a single continuous element. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SingleSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "SingleSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TwoLine",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TwoLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatList",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1953990298,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatList.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatList.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -159794591,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatList.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatList.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1714498298,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatListItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Lists present multiple line items vertically as a single continuous element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatListItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatListItem"
        }
      },
      {
        "HashCode": -1125138368,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatListItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Lists present multiple line items vertically as a single continuous element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatListItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatListItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -640696678,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatListItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatListItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatListItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 585262474,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatListItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatListItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatListItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2003749981,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Menus display a list of choices on a transient sheet of material.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatMenu"
        }
      },
      {
        "HashCode": -1027990054,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Menus display a list of choices on a transient sheet of material.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -770065530,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 14611174,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -933625588,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNavItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Nav Item is a menu item in the Nav Menu. Inherits from Mat List Item.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNavItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            *Not yet functional - Target of Href when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The title shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NavLinkMatch",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n             NavLinkMatch parameter used to determine the active state of the Nav Item.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NavLinkMatch"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you the Nav Item can be selected / active.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNavItem"
        }
      },
      {
        "HashCode": 195822190,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNavItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Nav Item is a menu item in the Nav Menu. Inherits from Mat List Item.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNavItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            *Not yet functional - Target of Href when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The title shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NavLinkMatch",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n             NavLinkMatch parameter used to determine the active state of the Nav Item.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NavLinkMatch"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you the Nav Item can be selected / active.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNavItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 833925534,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNavItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatNavItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNavItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 684087089,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNavItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatNavItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNavItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1126268062,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNavMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatNavMenu provides a navigation container\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNavMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multi",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Multi"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNavMenu"
        }
      },
      {
        "HashCode": 1035143641,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNavMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatNavMenu provides a navigation container\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNavMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multi",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Multi"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNavMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 113443550,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNavMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatNavMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNavMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -795664892,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNavMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatNavMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNavMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -684494492,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatNavSubMenu provides an expandable panel for child navigation lists.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNavSubMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu"
        }
      },
      {
        "HashCode": 1156259891,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatNavSubMenu provides an expandable panel for child navigation lists.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNavSubMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2025871263,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNavSubMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatNavSubMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2111967436,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNavSubMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatNavSubMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1607575144,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design NumericUpDown for Blazor, text fields allow users to input, edit, and select text.\n            </summary>\n            <typeparam name=\"TValue\">sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNumericUpDownFieldInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatNumericUpDownFieldInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Maximum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Minimum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DecimalPlaces",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "DecimalPlaces"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FieldType",
            "TypeName": "MatBlazor.MatNumericUpDownFieldType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FieldType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1814997912,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design NumericUpDown for Blazor, text fields allow users to input, edit, and select text.\n            </summary>\n            <typeparam name=\"TValue\">sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNumericUpDownFieldInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatNumericUpDownFieldInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Maximum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Minimum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DecimalPlaces",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "DecimalPlaces"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FieldType",
            "TypeName": "MatBlazor.MatNumericUpDownFieldType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FieldType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -978306852,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatNumericUpDownFieldInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1133419121,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatNumericUpDownFieldInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1258743995,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNumericUpDownField<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNumericUpDownField"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatNumericUpDownField<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Maximum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Minimum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DecimalPlaces",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "DecimalPlaces"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FieldType",
            "TypeName": "MatBlazor.MatNumericUpDownFieldType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FieldType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNumericUpDownField<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1798938687,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNumericUpDownField<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNumericUpDownField"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatNumericUpDownField<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Maximum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Minimum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DecimalPlaces",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "DecimalPlaces"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FieldType",
            "TypeName": "MatBlazor.MatNumericUpDownFieldType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FieldType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNumericUpDownField<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -395166588,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNumericUpDownField<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatNumericUpDownField"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNumericUpDownField<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -945204489,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNumericUpDownField<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatNumericUpDownField"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNumericUpDownField<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2054226705,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatPaginator",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatPaginator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatPaginatorPageEvent>",
            "Metadata": {
              "Common.PropertyName": "Page",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "PageIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatPaginator"
        }
      },
      {
        "HashCode": -1734028821,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatPaginator",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatPaginator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatPaginatorPageEvent>",
            "Metadata": {
              "Common.PropertyName": "Page",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "PageIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatPaginator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1682354857,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatPaper",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Basic component where the physical properties of paper are translated to the screen.\n            Used for creating sections and giving more focus to some parts of the application.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatPaper"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Elevation",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Level of the Elevation. \n            From 0 to 24.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Elevation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses outlined surface. If true, removes Elevation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rounded",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses round border.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Rounded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatPaper"
        }
      },
      {
        "HashCode": -591624789,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatPaper",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Basic component where the physical properties of paper are translated to the screen.\n            Used for creating sections and giving more focus to some parts of the application.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatPaper"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Elevation",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Level of the Elevation. \n            From 0 to 24.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Elevation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses outlined surface. If true, removes Elevation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rounded",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses round border.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Rounded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatPaper",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1254865676,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatPaper.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatPaper"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatPaper.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 355039641,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatPaper.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatPaper"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatPaper.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -765428490,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatProgressBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Progress indicators display the length of a process or express an unspecified wait time.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatProgressBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Reversed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Reversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Buffer",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Buffer"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatProgressBar"
        }
      },
      {
        "HashCode": 1636400267,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatProgressBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Progress indicators display the length of a process or express an unspecified wait time.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatProgressBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Reversed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Reversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Buffer",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Buffer"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatProgressBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 881564516,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatProgressCircle",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Circular Progress indicator displays the length of a process or express an unspecified wait time.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatProgressCircle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Toggles the component between the determinate and indeterminate state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n            If true, Puts the component in the closed state.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "MatBlazor.MatProgressCircleSize",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets the size of the circular progress bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets the progress bar to this value. Value should be between [0, 1].\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FourColored",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            IF true, Applies four animated stroke-colors to the indeterminate indicator. Applicable to the indeterminate variant only and overrides any single color currently set.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FourColored"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatProgressCircle"
        }
      },
      {
        "HashCode": 59005907,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatProgressCircle",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Circular Progress indicator displays the length of a process or express an unspecified wait time.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatProgressCircle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Toggles the component between the determinate and indeterminate state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n            If true, Puts the component in the closed state.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "MatBlazor.MatProgressCircleSize",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets the size of the circular progress bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets the progress bar to this value. Value should be between [0, 1].\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FourColored",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            IF true, Applies four animated stroke-colors to the indeterminate indicator. Applicable to the indeterminate variant only and overrides any single color currently set.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FourColored"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatProgressCircle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 691331699,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatRadioButtonInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Buttons communicate an action a user can take. They are typically placed throughout your UI, in places like dialogs, forms, cards, and toolbars.\n            </summary>\n            <typeparam name=\"TValue\">any</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatRadioButtonInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatRadioButtonInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatRadioButtonInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 713277059,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatRadioButtonInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Buttons communicate an action a user can take. They are typically placed throughout your UI, in places like dialogs, forms, cards, and toolbars.\n            </summary>\n            <typeparam name=\"TValue\">any</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatRadioButtonInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatRadioButtonInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatRadioButtonInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -219768794,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRadioButtonInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatRadioButtonInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRadioButtonInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -276506493,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRadioButtonInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatRadioButtonInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRadioButtonInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2051539071,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            \n            </summary>\n            <typeparam name=\"TValue\">any</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatRadioGroupInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1759771558,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            \n            </summary>\n            <typeparam name=\"TValue\">any</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatRadioGroupInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1225615069,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "BaseMatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1470653995,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.BaseMatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1649909563,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatRadioGroupInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -272836207,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatRadioGroupInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -726617118,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioButton<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatRadioButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioButton<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioButton<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1848080492,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioButton<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatRadioButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioButton<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioButton<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1195259610,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioButton<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatRadioButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioButton<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 718361580,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioButton<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatRadioButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioButton<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -84344882,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioGroup<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioGroup<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1884945520,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioGroup<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioGroup<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1488470215,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroup<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 370725203,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroup<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1245371296,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroup<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatRadioGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 4056144,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroup<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatRadioGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1038286221,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatRipple",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Ripples are visual representations used to communicate the status of a component or interactive element. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatRipple"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "MatBlazor.MatRippleColor",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatRipple"
        }
      },
      {
        "HashCode": -629624090,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatRipple",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Ripples are visual representations used to communicate the status of a component or interactive element. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatRipple"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "MatBlazor.MatRippleColor",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatRipple",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -882455554,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRipple.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatRipple"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRipple.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1349482813,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRipple.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatRipple"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRipple.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1485949960,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseCoreMatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseCoreMatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseCoreMatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseCoreMatOption<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 37539835,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseCoreMatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseCoreMatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseCoreMatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseCoreMatOption<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 770341680,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseCoreMatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseCoreMatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseCoreMatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1198586749,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseCoreMatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseCoreMatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseCoreMatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -832178926,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseCoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Selects allow users to select from a single-option menu. It functions as a wrapper around the browser's native select element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseCoreMatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseCoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TKey",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TKey for the MatBlazor.BaseCoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TKey",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseCoreMatSelect<TValue, TKey>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1265995460,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseCoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Selects allow users to select from a single-option menu. It functions as a wrapper around the browser's native select element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseCoreMatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseCoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TKey",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TKey for the MatBlazor.BaseCoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TKey",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseCoreMatSelect<TValue, TKey>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -626837624,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatOption<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 280700409,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatOption<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 56600860,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 533116243,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1411767979,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSelect<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 928165800,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSelect<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1261616068,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelect<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 134302347,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelect<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1366919722,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelectItem<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -2040108173,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelectItem<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2080518533,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "BaseMatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -531320814,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.BaseMatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2031504093,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatSelectItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 820532337,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatSelectItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2016451034,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Metadata": {
              "Common.PropertyName": "ValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 293322544,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Metadata": {
              "Common.PropertyName": "ValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1417106619,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "BaseMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1478728046,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.BaseMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -796255179,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatSelectValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1397090434,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatSelectValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 52711438,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatOption<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1100799366,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatOption<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1962582026,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -535905018,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1116444066,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatOptionString",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatOptionString"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatOptionString"
        }
      },
      {
        "HashCode": 1035259494,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatOptionString",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatOptionString"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatOptionString",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -377217256,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatOptionString.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatOptionString"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatOptionString.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -208345172,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatOptionString.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatOptionString"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatOptionString.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1354329420,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design Slider for Blazor. Sliders let users select from a range of values by moving the slider thumb.\n            </summary>\n            <typeparam name=\"TValue\">sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSlider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSlider<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMin",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMin",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMax",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMax",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Discrete",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Discrete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Markers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Markers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Pin",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Pin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableStep",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Immediate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When set to true, any change to the slider immediately changes the value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Immediate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSlider<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -294936209,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design Slider for Blazor. Sliders let users select from a range of values by moving the slider thumb.\n            </summary>\n            <typeparam name=\"TValue\">sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSlider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSlider<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMin",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMin",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMax",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMax",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Discrete",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Discrete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Markers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Markers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Pin",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Pin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableStep",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Immediate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When set to true, any change to the slider immediately changes the value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Immediate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSlider<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1226150956,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design SlideToggle for Blazor. Component for on/off control that can be toggled via clicking or dragging.\n            </summary>\n            <typeparam name=\"TValue\">bool, bool?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSlideToggle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSlideToggle<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSlideToggle<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1052433680,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design SlideToggle for Blazor. Component for on/off control that can be toggled via clicking or dragging.\n            </summary>\n            <typeparam name=\"TValue\">bool, bool?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSlideToggle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSlideToggle<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSlideToggle<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 466230033,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSnackbar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Snackbars provide brief messages about app processes at the bottom of the screen.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSnackbar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stacked",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Positions the action buttons below the label instead of alongside it.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stacked"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Leading",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n             Displays the snackbar on the \"leading edge\" of the screen (the left side in LTR, or the right side in RTL). \n            \n             By default, snackbars are centered horizontally within the viewport. On larger screens, they can optionally be displayed on the leading edge by setting this property.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Leading"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Controls whether or not the snackbar is shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Timeout",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Timeout in ms after which the snackbar closes itself. Default: 10000 ms\n            To leave the snackbar open indefinitely set the timeout to -1\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Timeout"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            This event is raised whenever IsOpen changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSnackbar"
        }
      },
      {
        "HashCode": -751509899,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSnackbar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Snackbars provide brief messages about app processes at the bottom of the screen.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSnackbar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stacked",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Positions the action buttons below the label instead of alongside it.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stacked"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Leading",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n             Displays the snackbar on the \"leading edge\" of the screen (the left side in LTR, or the right side in RTL). \n            \n             By default, snackbars are centered horizontally within the viewport. On larger screens, they can optionally be displayed on the leading edge by setting this property.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Leading"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Controls whether or not the snackbar is shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Timeout",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Timeout in ms after which the snackbar closes itself. Default: 10000 ms\n            To leave the snackbar open indefinitely set the timeout to -1\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Timeout"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            This event is raised whenever IsOpen changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSnackbar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1860401599,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSnackbar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatSnackbar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSnackbar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1368258892,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSnackbar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatSnackbar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSnackbar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1609368807,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSortHeader",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The MatSortHeader and MatSortHeaderRow are used, respectively, to add sorting state and display to tabular data.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSortHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSortHeader"
        }
      },
      {
        "HashCode": 1030491661,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSortHeader",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The MatSortHeader and MatSortHeaderRow are used, respectively, to add sorting state and display to tabular data.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSortHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSortHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1851491586,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSortHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatSortHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSortHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -185537757,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSortHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatSortHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSortHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -553418839,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSortHeaderRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortIdChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "SortIdChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatSortDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DirectionChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "Metadata": {
              "Common.PropertyName": "DirectionChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortChangedEvent>",
            "Metadata": {
              "Common.PropertyName": "SortChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow"
        }
      },
      {
        "HashCode": -218785544,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSortHeaderRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortIdChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "SortIdChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatSortDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DirectionChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "Metadata": {
              "Common.PropertyName": "DirectionChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortChangedEvent>",
            "Metadata": {
              "Common.PropertyName": "SortChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -389654481,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSortHeaderRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatSortHeaderRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 540377914,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSortHeaderRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatSortHeaderRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 606078639,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            WARNING: In Development progress\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTabBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Active",
            "TypeName": "MatBlazor.BaseMatTabLabel",
            "Metadata": {
              "Common.PropertyName": "Active"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Metadata": {
              "Common.PropertyName": "ActiveChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTabBar"
        }
      },
      {
        "HashCode": 434574702,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            WARNING: In Development progress\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTabBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Active",
            "TypeName": "MatBlazor.BaseMatTabLabel",
            "Metadata": {
              "Common.PropertyName": "Active"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Metadata": {
              "Common.PropertyName": "ActiveChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTabBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1298721338,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTabBar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatTabBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTabBar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1531796349,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTabBar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatTabBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTabBar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1609683437,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTabLabel",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTabLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTabLabel"
        }
      },
      {
        "HashCode": 1774824859,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTabLabel",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTabLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTabLabel",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1715373404,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTabLabel.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatTabLabel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTabLabel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1828303093,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTabLabel.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatTabLabel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTabLabel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2054083376,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTable",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Mat Table display a table data.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "PageParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageSizeParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Descending",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Descending"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DescendingParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DescendingParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortBy",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortBy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortByParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortByParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageRecordCountLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageRecordCountLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingDataPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingDataPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingRecordsCountPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingRecordsCountPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SearchTermParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionChanged",
            "TypeName": "System.Action<System.Object>",
            "Metadata": {
              "Common.PropertyName": "SelectionChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderRowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableHeader row\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderRowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableRow\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you can select a single row.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RequestApiOnlyOnce",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to Request the API only once.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RequestApiOnlyOnce"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DebounceMilliseconds",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the delay duration between user input on the Search Term Field. Default 800\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DebounceMilliseconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterByColumnName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies which column is used for the filter / search term. If this is populated the Search Textbox will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterByColumnName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldLabel",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Label for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldPlaceHolder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Placeholder for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldPlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadInitialData",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies where to Load the Initial Table Data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadInitialData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApiUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the API Url form for the table data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApiUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPaging",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Paging visibility\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPaging"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowFooter",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Table Footer visibility.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowFooter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Striped",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if table has alternating color rows.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Striped"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            The number of rows per page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnRowDbClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Action to execute on row item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnRowDbClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTable"
        }
      },
      {
        "HashCode": 770352619,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTable",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Mat Table display a table data.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "PageParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageSizeParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Descending",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Descending"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DescendingParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DescendingParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortBy",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortBy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortByParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortByParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageRecordCountLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageRecordCountLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingDataPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingDataPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingRecordsCountPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingRecordsCountPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SearchTermParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionChanged",
            "TypeName": "System.Action<System.Object>",
            "Metadata": {
              "Common.PropertyName": "SelectionChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderRowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableHeader row\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderRowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableRow\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you can select a single row.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RequestApiOnlyOnce",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to Request the API only once.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RequestApiOnlyOnce"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DebounceMilliseconds",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the delay duration between user input on the Search Term Field. Default 800\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DebounceMilliseconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterByColumnName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies which column is used for the filter / search term. If this is populated the Search Textbox will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterByColumnName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldLabel",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Label for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldPlaceHolder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Placeholder for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldPlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadInitialData",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies where to Load the Initial Table Data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadInitialData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApiUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the API Url form for the table data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApiUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPaging",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Paging visibility\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPaging"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowFooter",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Table Footer visibility.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowFooter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Striped",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if table has alternating color rows.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Striped"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            The number of rows per page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnRowDbClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Action to execute on row item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnRowDbClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTable",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1180392722,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseTableRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Mat Table Row display a table row   \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseTableRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowItem",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "RowItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseTableRow"
        }
      },
      {
        "HashCode": 341688922,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseTableRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Mat Table Row display a table row   \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseTableRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowItem",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "RowItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseTableRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 19983581,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseTableRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseTableRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseTableRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 34352446,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseTableRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseTableRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseTableRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 826031042,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTab",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTab"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "LabelContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTab"
        }
      },
      {
        "HashCode": 9378795,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTab",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTab"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "LabelContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTab",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 674121330,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTab.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTab.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1928537043,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTab.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTab.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -299506790,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTab.LabelContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LabelContent",
            "ParentTag": "BaseMatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTab.LabelContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1733626768,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTab.LabelContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LabelContent",
            "ParentTag": "MatBlazor.BaseMatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTab.LabelContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1185985082,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTabGroup",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatTabGroup organize content into separate views where only one view can be visible at a time. Each tab's label is shown in the tab header and the active tab's label is designated with the animated ink bar.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTabGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTabGroup"
        }
      },
      {
        "HashCode": -1443507281,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTabGroup",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatTabGroup organize content into separate views where only one view can be visible at a time. Each tab's label is shown in the tab header and the active tab's label is designated with the animated ink bar.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTabGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTabGroup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1291490119,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTabGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatTabGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTabGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1011202817,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTabGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatTabGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTabGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2077936673,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatStringField",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatStringField"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatStringField"
        }
      },
      {
        "HashCode": 1636880424,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatStringField",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatStringField"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatStringField",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1280739273,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatStringField.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatStringField"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatStringField.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -23917992,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatStringField.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatStringField"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatStringField.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1461868939,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTextField<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design Text Field for Blazor. Text fields allow users to input, edit, and select text.\n            </summary>\n            <typeparam name=\"TValue\">string, sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?, DateTime, DateTime?, bool, bool?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTextField"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatTextField<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTextField<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1801161500,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTextField<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design Text Field for Blazor. Text fields allow users to input, edit, and select text.\n            </summary>\n            <typeparam name=\"TValue\">string, sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?, DateTime, DateTime?, bool, bool?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTextField"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatTextField<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTextField<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1980113667,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTextField<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatTextField"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTextField<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1005243165,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTextField<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatTextField"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTextField<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2051232661,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatThemeProvider",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The Material Design color system can be used to create a color theme that reflects your brand or style.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatThemeProvider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "MatBlazor.MatTheme",
            "Metadata": {
              "Common.PropertyName": "Theme"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatThemeProvider"
        }
      },
      {
        "HashCode": 441350697,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatThemeProvider",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The Material Design color system can be used to create a color theme that reflects your brand or style.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatThemeProvider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "MatBlazor.MatTheme",
            "Metadata": {
              "Common.PropertyName": "Theme"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatThemeProvider",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -377105592,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatThemeProvider.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatThemeProvider"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatThemeProvider.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -414644848,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatThemeProvider.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatThemeProvider"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatThemeProvider.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2016778885,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatToastContainer",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Toasts provide brief notifications or messages about app processes\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatToastContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatToastContainer"
        }
      },
      {
        "HashCode": -1842025838,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatToastContainer",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Toasts provide brief notifications or messages about app processes\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatToastContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatToastContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1636341260,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatToastItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Toasts provide brief notifications or messages about app processes\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatToastItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Toast",
            "TypeName": "MatBlazor.MatToast",
            "Metadata": {
              "Common.PropertyName": "Toast"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "MatBlazor.MatToastType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatToastItem"
        }
      },
      {
        "HashCode": 1132944812,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatToastItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Toasts provide brief notifications or messages about app processes\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatToastItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Toast",
            "TypeName": "MatBlazor.MatToast",
            "Metadata": {
              "Common.PropertyName": "Toast"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "MatBlazor.MatToastType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatToastItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1898525234,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatToastItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatToastItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatToastItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1157702921,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatToastItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatToastItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatToastItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1753283856,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTooltip",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The Material tooltip provides a text label that is displayed when the user hovers an element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "TooltipContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tooltip",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TargetId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Wrap",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Wrap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatTooltipPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTooltip"
        }
      },
      {
        "HashCode": 870145922,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTooltip",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The Material tooltip provides a text label that is displayed when the user hovers an element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "TooltipContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tooltip",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TargetId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Wrap",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Wrap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatTooltipPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTooltip",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1256901265,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTooltip.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTooltip.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1370426050,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTooltip.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTooltip.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -88724444,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTooltip.TooltipContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipContent",
            "ParentTag": "BaseMatTooltip"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTooltip.TooltipContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2000493117,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTooltip.TooltipContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipContent",
            "ParentTag": "MatBlazor.BaseMatTooltip"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTooltip.TooltipContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1489738823,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTreeNode<TNode>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTreeNode"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TNode",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TNode for the MatBlazor.MatTreeNode<TNode> component.",
            "Metadata": {
              "Common.PropertyName": "TNode",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Node",
            "TypeName": "TNode",
            "Metadata": {
              "Common.PropertyName": "Node",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSelected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsSelected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTreeNode<TNode>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1034135868,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTreeNode<TNode>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTreeNode"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TNode",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TNode for the MatBlazor.MatTreeNode<TNode> component.",
            "Metadata": {
              "Common.PropertyName": "TNode",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Node",
            "TypeName": "TNode",
            "Metadata": {
              "Common.PropertyName": "Node",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSelected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsSelected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTreeNode<TNode>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1251001662,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTreeView<TNode>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Renders the data as a tree.\n            </summary>\n            <typeparam name=\"TNode\"></typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTreeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TNode",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TNode for the MatBlazor.MatTreeView<TNode> component.",
            "Metadata": {
              "Common.PropertyName": "TNode",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RootNode",
            "TypeName": "TNode",
            "Documentation": "\n            <summary>\n            The root node to be displayed in the tree\n            One of the following must be supplied <see cref=\"P:MatBlazor.MatTreeView`1.RootNode\" /> or <see cref=\"P:MatBlazor.MatTreeView`1.RootNodes\" /> (but NOT BOTH)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RootNode",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RootNodes",
            "TypeName": "System.Collections.Generic.IEnumerable<TNode>",
            "Documentation": "\n            <summary>\n            All the root nodes displayed in the tree\n            One of the following must be supplied <see cref=\"P:MatBlazor.MatTreeView`1.RootNode\" /> or <see cref=\"P:MatBlazor.MatTreeView`1.RootNodes\" /> (but NOT BOTH)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RootNodes",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedNode",
            "TypeName": "TNode",
            "Documentation": "\n            <summary>\n            The selected item in the tree\n            (Optional - default null)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedNode",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NodeTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TNode>",
            "Documentation": "\n            <summary>\n            The template used to render the Node\n            (Required)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NodeTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GetChildNodesCallback",
            "TypeName": "MatBlazor.GetChildNodesDelegate<TNode>",
            "Documentation": "\n            <summary>\n            A function that gets all the child nodes for a given parentNode.\n            If lazy loading is supported and the child nodes have not yet been \n            loaded then it should return null.\n            (Required)\n            </summary>\n            <remarks>\n            The function should return a collection of child nodes.\n               \n            This function maybe called many times for a given node.\n            \n            Loading on Demand\n            If Lazy loading is supported and the child nodes have not been loaded\n            then it should return null. \n            If null is returned then <see cref=\"P:MatBlazor.MatTreeView`1.LoadChildNodesCallback\" /> will be called to \n            get the child nodes, to it must have been set.\n            </remarks>\n            <example><![CDATA[\n            <MatTreeView TNode=\"MyTreeNode\"\n                        GetChildNodesCallback=\"@GetChildNodes\" />\n            ...\n            @code {\n                private IEnumerable<MyTreeNode> GetChildNodes(MyTreeNode parentNode)\n                {\n                    if (parentNode.AreChildrenLoaded == false)\n                        return null; // LoadChildrenCallbackAsync will be called to load the child nodes\n                        \n                    return parentNode.Nodes;\n                }\n            }        \n            ]]></example>\n        ",
            "Metadata": {
              "Common.PropertyName": "GetChildNodesCallback",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadChildNodesCallback",
            "TypeName": "MatBlazor.LoadChildNodesDelegate<TNode>",
            "Documentation": "\n            <summary>\n            A function to lazy load child nodes. Only required if lazy loading / load on demand\n            is used. \n            (Optional - unless <see cref=\"P:MatBlazor.MatTreeView`1.GetChildNodesCallback\" /> returns null)\n            </summary>\n            <remarks>\n            This function is called when <see cref=\"P:MatBlazor.MatTreeView`1.GetChildNodesCallback\" /> returns null. \n            This causes this function to be called which should load all the child nodes.\n            The callback is asynchronous and should return when the values have been loaded.\n            \n            If an error occurs during the loading, then throw an exception (the exceptions message\n            will be shown in the UI). The function many be called again for the same node in order\n            to re-try.\n            </remarks>\n            <example><![CDATA[\n            <MatTreeView TNode=\"MyTreeNode\"\n                        GetChildNodesCallback=\"@GetChildNodes\" \n                        LoadChildNodesCallback=\"@LoadChildNodesAsync\" />\n            ...\n            @code {\n                private IEnumerable<MyTreeNode> GetChildNodes(MyTreeNode parentNode)\n                {\n                    if (parentNode.AreChildrenLoaded == false)\n                        return null; // LoadChildrenCallbackAsync will be called to load the child nodes\n                        \n                    return parentNode.Nodes;\n                }\n                \n                private Task<IEnumerable<MyTreeNode>> LoadChildNodesAsync(MyTreeNode parentNode)\n                {\n                    if (parentNode.AreChildrenLoaded == false)\n                    {\n                        await parentNode.Nodes = MyWebApi.GetChildNodes(parentNode.ID);\n                    }\n                        \n                    return parentNode.Nodes;\n                }        \n            }        \n            ]]></example>        \n        ",
            "Metadata": {
              "Common.PropertyName": "LoadChildNodesCallback",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsNodeExpandedCallback",
            "TypeName": "MatBlazor.IsNodeExpandedDelegate<TNode>",
            "Documentation": "\n            <summary>\n            A function that indicates if the given node is expanded or collapsed.\n            (Optional - if null then the expanded/collapsed state is managed by the <see cref=\"T:MatBlazor.MatTreeView`1\" />)\n            </summary>\n            <example><![CDATA[\n            <MatTreeView TNode=\"MyTreeNode\"\n                        IsNodeExpandedCallback=\"@((myTreeNode)=>myTreeNode.IsExpanded)\" />\n            \n            or \n            \n            <MatTreeView TNode=\"MyTreeNode\"\n                        IsNodeExpandedCallback=\"@IsExpanded\" />\n            ...\n            @code {\n                private bool IsExpanded(MyTreeNode myTreeNode)\n                {\n                    return myTreeNode.IsExpanded;\n                }\n            }\n            ]]></example>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsNodeExpandedCallback",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandStateChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.ExpandedStateChangedArgs<TNode>>",
            "Documentation": "\n            <summary>\n            An event raised when the expanded state of a node changes\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpandStateChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedNodeChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TNode>",
            "Documentation": "\n            <summary>\n            An event raised when the selected node changes\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedNodeChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTreeView<TNode>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 475538990,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTreeView<TNode>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Renders the data as a tree.\n            </summary>\n            <typeparam name=\"TNode\"></typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTreeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TNode",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TNode for the MatBlazor.MatTreeView<TNode> component.",
            "Metadata": {
              "Common.PropertyName": "TNode",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RootNode",
            "TypeName": "TNode",
            "Documentation": "\n            <summary>\n            The root node to be displayed in the tree\n            One of the following must be supplied <see cref=\"P:MatBlazor.MatTreeView`1.RootNode\" /> or <see cref=\"P:MatBlazor.MatTreeView`1.RootNodes\" /> (but NOT BOTH)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RootNode",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RootNodes",
            "TypeName": "System.Collections.Generic.IEnumerable<TNode>",
            "Documentation": "\n            <summary>\n            All the root nodes displayed in the tree\n            One of the following must be supplied <see cref=\"P:MatBlazor.MatTreeView`1.RootNode\" /> or <see cref=\"P:MatBlazor.MatTreeView`1.RootNodes\" /> (but NOT BOTH)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RootNodes",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedNode",
            "TypeName": "TNode",
            "Documentation": "\n            <summary>\n            The selected item in the tree\n            (Optional - default null)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedNode",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NodeTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TNode>",
            "Documentation": "\n            <summary>\n            The template used to render the Node\n            (Required)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NodeTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GetChildNodesCallback",
            "TypeName": "MatBlazor.GetChildNodesDelegate<TNode>",
            "Documentation": "\n            <summary>\n            A function that gets all the child nodes for a given parentNode.\n            If lazy loading is supported and the child nodes have not yet been \n            loaded then it should return null.\n            (Required)\n            </summary>\n            <remarks>\n            The function should return a collection of child nodes.\n               \n            This function maybe called many times for a given node.\n            \n            Loading on Demand\n            If Lazy loading is supported and the child nodes have not been loaded\n            then it should return null. \n            If null is returned then <see cref=\"P:MatBlazor.MatTreeView`1.LoadChildNodesCallback\" /> will be called to \n            get the child nodes, to it must have been set.\n            </remarks>\n            <example><![CDATA[\n            <MatTreeView TNode=\"MyTreeNode\"\n                        GetChildNodesCallback=\"@GetChildNodes\" />\n            ...\n            @code {\n                private IEnumerable<MyTreeNode> GetChildNodes(MyTreeNode parentNode)\n                {\n                    if (parentNode.AreChildrenLoaded == false)\n                        return null; // LoadChildrenCallbackAsync will be called to load the child nodes\n                        \n                    return parentNode.Nodes;\n                }\n            }        \n            ]]></example>\n        ",
            "Metadata": {
              "Common.PropertyName": "GetChildNodesCallback",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadChildNodesCallback",
            "TypeName": "MatBlazor.LoadChildNodesDelegate<TNode>",
            "Documentation": "\n            <summary>\n            A function to lazy load child nodes. Only required if lazy loading / load on demand\n            is used. \n            (Optional - unless <see cref=\"P:MatBlazor.MatTreeView`1.GetChildNodesCallback\" /> returns null)\n            </summary>\n            <remarks>\n            This function is called when <see cref=\"P:MatBlazor.MatTreeView`1.GetChildNodesCallback\" /> returns null. \n            This causes this function to be called which should load all the child nodes.\n            The callback is asynchronous and should return when the values have been loaded.\n            \n            If an error occurs during the loading, then throw an exception (the exceptions message\n            will be shown in the UI). The function many be called again for the same node in order\n            to re-try.\n            </remarks>\n            <example><![CDATA[\n            <MatTreeView TNode=\"MyTreeNode\"\n                        GetChildNodesCallback=\"@GetChildNodes\" \n                        LoadChildNodesCallback=\"@LoadChildNodesAsync\" />\n            ...\n            @code {\n                private IEnumerable<MyTreeNode> GetChildNodes(MyTreeNode parentNode)\n                {\n                    if (parentNode.AreChildrenLoaded == false)\n                        return null; // LoadChildrenCallbackAsync will be called to load the child nodes\n                        \n                    return parentNode.Nodes;\n                }\n                \n                private Task<IEnumerable<MyTreeNode>> LoadChildNodesAsync(MyTreeNode parentNode)\n                {\n                    if (parentNode.AreChildrenLoaded == false)\n                    {\n                        await parentNode.Nodes = MyWebApi.GetChildNodes(parentNode.ID);\n                    }\n                        \n                    return parentNode.Nodes;\n                }        \n            }        \n            ]]></example>        \n        ",
            "Metadata": {
              "Common.PropertyName": "LoadChildNodesCallback",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsNodeExpandedCallback",
            "TypeName": "MatBlazor.IsNodeExpandedDelegate<TNode>",
            "Documentation": "\n            <summary>\n            A function that indicates if the given node is expanded or collapsed.\n            (Optional - if null then the expanded/collapsed state is managed by the <see cref=\"T:MatBlazor.MatTreeView`1\" />)\n            </summary>\n            <example><![CDATA[\n            <MatTreeView TNode=\"MyTreeNode\"\n                        IsNodeExpandedCallback=\"@((myTreeNode)=>myTreeNode.IsExpanded)\" />\n            \n            or \n            \n            <MatTreeView TNode=\"MyTreeNode\"\n                        IsNodeExpandedCallback=\"@IsExpanded\" />\n            ...\n            @code {\n                private bool IsExpanded(MyTreeNode myTreeNode)\n                {\n                    return myTreeNode.IsExpanded;\n                }\n            }\n            ]]></example>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsNodeExpandedCallback",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandStateChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.ExpandedStateChangedArgs<TNode>>",
            "Documentation": "\n            <summary>\n            An event raised when the expanded state of a node changes\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpandStateChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedNodeChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TNode>",
            "Documentation": "\n            <summary>\n            An event raised when the selected node changes\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedNodeChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTreeView<TNode>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1307954265,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTreeView<TNode>.NodeTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The template used to render the Node\n            (Required)\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NodeTemplate",
            "ParentTag": "MatTreeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NodeTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTreeView<TNode>.NodeTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1052643478,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTreeView<TNode>.NodeTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The template used to render the Node\n            (Required)\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NodeTemplate",
            "ParentTag": "MatBlazor.MatTreeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NodeTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTreeView<TNode>.NodeTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -953136155,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHeadline1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline1"
        }
      },
      {
        "HashCode": 493558810,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHeadline1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline1",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -336928297,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatHeadline1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 953933998,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatHeadline1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1005781480,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHeadline2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline2"
        }
      },
      {
        "HashCode": -1551039385,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHeadline2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline2",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 521816288,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatHeadline2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -780844889,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatHeadline2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -300231996,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline3",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHeadline3"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline3"
        }
      },
      {
        "HashCode": 1773658603,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline3",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHeadline3"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline3",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2112154051,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline3.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatHeadline3"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline3.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -140114447,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline3.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatHeadline3"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline3.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -338879056,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline4",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHeadline4"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline4"
        }
      },
      {
        "HashCode": 375678518,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline4",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHeadline4"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline4",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1759259379,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline4.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatHeadline4"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline4.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2063910471,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline4.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatHeadline4"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline4.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 850274663,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline5",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHeadline5"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline5"
        }
      },
      {
        "HashCode": 944913309,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline5",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHeadline5"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline5",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1647018723,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline5.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatHeadline5"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline5.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1217586879,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline5.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatHeadline5"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline5.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 286249043,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline6",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHeadline6"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline6"
        }
      },
      {
        "HashCode": 398744599,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline6",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHeadline6"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline6",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1992930915,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline6.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatHeadline6"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline6.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 394786903,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline6.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatHeadline6"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline6.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1168958151,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatH1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH1"
        }
      },
      {
        "HashCode": -711295455,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatH1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH1",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1652417584,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatH1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 158756103,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatH1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1496415499,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatH2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH2"
        }
      },
      {
        "HashCode": 1840751229,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatH2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH2",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -620323560,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatH2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -21413333,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatH2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 876851232,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH3",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatH3"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH3"
        }
      },
      {
        "HashCode": -1091119393,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH3",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatH3"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH3",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 391443633,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH3.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatH3"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH3.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1656270251,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH3.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatH3"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH3.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1400151363,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH4",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatH4"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH4"
        }
      },
      {
        "HashCode": -632855973,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH4",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatH4"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH4",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1489217144,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH4.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatH4"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH4.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -424815759,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH4.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatH4"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH4.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -290006662,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH5",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatH5"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH5"
        }
      },
      {
        "HashCode": 1038395913,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH5",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatH5"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH5",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 622942190,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH5.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatH5"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH5.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 888361053,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH5.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatH5"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH5.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1755814185,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH6",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatH6"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH6"
        }
      },
      {
        "HashCode": 89488936,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH6",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatH6"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH6",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -729840902,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH6.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatH6"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH6.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 886009251,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH6.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatH6"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH6.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1659158736,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSubtitle1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSubtitle1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSubtitle1"
        }
      },
      {
        "HashCode": -2112712197,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSubtitle1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSubtitle1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSubtitle1",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1484164882,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSubtitle1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSubtitle1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSubtitle1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1655352512,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSubtitle1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSubtitle1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSubtitle1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1322695844,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSubtitle2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSubtitle2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSubtitle2"
        }
      },
      {
        "HashCode": -1931461254,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSubtitle2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSubtitle2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSubtitle2",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1349114046,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSubtitle2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSubtitle2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSubtitle2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1111319794,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSubtitle2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSubtitle2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSubtitle2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -88005803,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatBody1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBody1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatBody1"
        }
      },
      {
        "HashCode": 2031936215,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatBody1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatBody1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatBody1",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -157488465,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatBody1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBody1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatBody1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -311027596,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatBody1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatBody1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatBody1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 264484134,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatBody2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBody2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatBody2"
        }
      },
      {
        "HashCode": 2629423,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatBody2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatBody2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatBody2",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 608242919,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatBody2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBody2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatBody2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1159159111,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatBody2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatBody2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatBody2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -617923831,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCaption",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCaption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCaption"
        }
      },
      {
        "HashCode": -277343332,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCaption",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCaption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCaption",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1188036780,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCaption.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCaption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCaption.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2139160660,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCaption.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCaption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCaption.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 857914324,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatOverline",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatOverline"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatOverline"
        }
      },
      {
        "HashCode": -1559501526,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatOverline",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatOverline"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatOverline",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1632233410,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatOverline.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatOverline"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatOverline.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -628994239,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatOverline.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatOverline"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatOverline.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 345809033,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatVirtualScroll<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The VirtualScroll for Blazor displays large lists of elements performantly by only rendering the items that fit on-screen.\n            Loading hundreds of elements can be slow in any browser; virtual scrolling enables a performant way to simulate all items being rendered by making the height of the container element the same as the height of total number of elements to be rendered, and then only rendering the items in view.\n            </summary>\n            <typeparam name=\"TItem\"></typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatVirtualScroll<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemHeight",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ItemHeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatVirtualScroll<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 219009263,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatVirtualScroll<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The VirtualScroll for Blazor displays large lists of elements performantly by only rendering the items that fit on-screen.\n            Loading hundreds of elements can be slow in any browser; virtual scrolling enables a performant way to simulate all items being rendered by making the height of the container element the same as the height of total number of elements to be rendered, and then only rendering the items in view.\n            </summary>\n            <typeparam name=\"TItem\"></typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatVirtualScroll<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemHeight",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ItemHeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatVirtualScroll<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -606894132,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatVirtualScroll<TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatVirtualScroll"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatVirtualScroll<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2117571788,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatVirtualScroll<TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatVirtualScroll"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatVirtualScroll<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1877773543,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatVirtualScroll<TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "BaseMatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatVirtualScroll<TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -377856195,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatVirtualScroll<TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.BaseMatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatVirtualScroll<TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 921752640,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatViewChildren<TSelect>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatViewChildren"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TSelect",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TSelect for the MatBlazor.MatViewChildren<TSelect> component.",
            "Metadata": {
              "Common.PropertyName": "TSelect",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatViewChildren<TSelect>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1309126527,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatViewChildren<TSelect>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatViewChildren"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TSelect",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TSelect for the MatBlazor.MatViewChildren<TSelect> component.",
            "Metadata": {
              "Common.PropertyName": "TSelect",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatViewChildren<TSelect>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1062361381,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatViewChildren<TSelect>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatViewChildren"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatViewChildren<TSelect>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -537444513,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatViewChildren<TSelect>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatViewChildren"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatViewChildren<TSelect>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -916865030,
        "Kind": "Components.Component",
        "Name": "MatBlazor.ForwardRefContext<TRef>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ForwardRefContext"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TRef",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TRef for the MatBlazor.ForwardRefContext<TRef> component.",
            "Metadata": {
              "Common.PropertyName": "TRef",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef<TRef>>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.ForwardRefContext<TRef>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1612910040,
        "Kind": "Components.Component",
        "Name": "MatBlazor.ForwardRefContext<TRef>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.ForwardRefContext"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TRef",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TRef for the MatBlazor.ForwardRefContext<TRef> component.",
            "Metadata": {
              "Common.PropertyName": "TRef",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef<TRef>>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.ForwardRefContext<TRef>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1144274810,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.ForwardRefContext<TRef>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ForwardRefContext"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.ForwardRefContext<TRef>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1188507199,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.ForwardRefContext<TRef>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.ForwardRefContext"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.ForwardRefContext<TRef>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -330059532,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCombine",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCombine"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCombine"
        }
      },
      {
        "HashCode": -622454626,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCombine",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCombine"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCombine",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1121138291,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatContentWrapper",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatContentWrapper"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatContentWrapper"
        }
      },
      {
        "HashCode": 413977281,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatContentWrapper",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatContentWrapper"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatContentWrapper",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -709335142,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatContentWrapper.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatContentWrapper"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatContentWrapper.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1460975009,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatContentWrapper.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatContentWrapper"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatContentWrapper.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 73503690,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatItemsControl<T>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatItemsControl"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter T for the MatBlazor.MatItemsControl<T> component.",
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<T>",
            "Metadata": {
              "Common.PropertyName": "DefaultItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<T>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<T>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatItemsControl<T>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1231562844,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatItemsControl<T>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatItemsControl"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter T for the MatBlazor.MatItemsControl<T> component.",
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<T>",
            "Metadata": {
              "Common.PropertyName": "DefaultItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<T>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<T>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatItemsControl<T>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -854197812,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatItemsControl<T>.DefaultItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DefaultItemTemplate",
            "ParentTag": "MatItemsControl"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'DefaultItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatItemsControl<T>.DefaultItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1674995538,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatItemsControl<T>.DefaultItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DefaultItemTemplate",
            "ParentTag": "MatBlazor.MatItemsControl"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'DefaultItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatItemsControl<T>.DefaultItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -292218273,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatItemsControl<T>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatItemsControl"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatItemsControl<T>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1226985335,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatItemsControl<T>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatItemsControl"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatItemsControl<T>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 768693809,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatAutocompleteList<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The label of the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The Icon displayed as the leading icon for the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StringValue",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The StringValue displayed in the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StringValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TItem",
            "Documentation": "\n            <summary>\n            The value to be used to pre-select an item from the list\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            ValueChanged is fired when the value is selected(by clicking on an element in the popup)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomStringSelector",
            "TypeName": "System.Func<TItem, System.String>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CustomStringSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            The collection which should be rendered and filtered\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If this parameter is true then the style of the textbox is outlined see `MatTextfield`\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnOpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            OnOpenedChanged is fired when the popup dialog is opened or close and the parameter indicates whenever is it open, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnOpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnTextChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            OnTextChanged is fired when the string value is changed(when an input occurs in the textfield or when an item is selected)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnTextChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowClearButton",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the clear button(using a trailing icon) should be displayed, which can clear the entire text and the selected value), the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the textfield and the dialog will be or not displayed in the full screen, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAutocompleteList<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1993082202,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatAutocompleteList<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The label of the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The Icon displayed as the leading icon for the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StringValue",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The StringValue displayed in the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StringValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TItem",
            "Documentation": "\n            <summary>\n            The value to be used to pre-select an item from the list\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            ValueChanged is fired when the value is selected(by clicking on an element in the popup)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomStringSelector",
            "TypeName": "System.Func<TItem, System.String>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CustomStringSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            The collection which should be rendered and filtered\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If this parameter is true then the style of the textbox is outlined see `MatTextfield`\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnOpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            OnOpenedChanged is fired when the popup dialog is opened or close and the parameter indicates whenever is it open, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnOpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnTextChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            OnTextChanged is fired when the string value is changed(when an input occurs in the textfield or when an item is selected)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnTextChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowClearButton",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the clear button(using a trailing icon) should be displayed, which can clear the entire text and the selected value), the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the textfield and the dialog will be or not displayed in the full screen, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAutocompleteList<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1672914856,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAutocompleteList<TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAutocompleteList<TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1708898607,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAutocompleteList<TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAutocompleteList<TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 603586977,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1586097589,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1813131964,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -607536307,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1117536517,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAutocomplete"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 605704460,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAutocomplete"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1783386312,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatButtonLink",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatButtonLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Link to a url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Raised",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has raised style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Raised"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unelevated",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has unelevated style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Unelevated"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has outlined style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has dense style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the link's icon.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies if icon has trailing position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatButtonLink"
        }
      },
      {
        "HashCode": 1387442212,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatButtonLink",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatButtonLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Link to a url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Raised",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has raised style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Raised"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unelevated",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has unelevated style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Unelevated"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has outlined style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has dense style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the link's icon.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies if icon has trailing position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatButtonLink",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1199991779,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatButtonLink.ChildContent",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatButtonLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatButtonLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 200904585,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatButtonLink.ChildContent",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatButtonLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatButtonLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1815209556,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCheckboxInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatCheckboxInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputValue",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "InputValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCheckboxInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -608754899,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCheckboxInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatCheckboxInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputValue",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "InputValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCheckboxInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -173271418,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCheckboxInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCheckboxInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCheckboxInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1323703775,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCheckboxInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCheckboxInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCheckboxInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1182180928,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableCellOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableCellOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Numeric",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Numeric"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableCellOld"
        }
      },
      {
        "HashCode": -346933640,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableCellOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableCellOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Numeric",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Numeric"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableCellOld",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 966487263,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableCellOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDataTableCellOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableCellOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1532360488,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableCellOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDataTableCellOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableCellOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 749741045,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableColumnOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableColumnOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Func<TItem, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Sort",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Sort"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableColumnOld<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1632654202,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableColumnOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableColumnOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Func<TItem, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Sort",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Sort"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableColumnOld<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 176678085,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableColumnOld<TItem>.Template",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "MatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableColumnOld<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1931013774,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableColumnOld<TItem>.Template",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "MatBlazor.MatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableColumnOld<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -194593094,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableColumnOld<TItem>.HeaderTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "MatDataTableColumnOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableColumnOld<TItem>.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -245458121,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableColumnOld<TItem>.HeaderTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "MatBlazor.MatDataTableColumnOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableColumnOld<TItem>.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1814579948,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableContentOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableContentOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableContentOld"
        }
      },
      {
        "HashCode": -1618840711,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableContentOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableContentOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableContentOld",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -106409275,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableContentOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDataTableContentOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableContentOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1294943799,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableContentOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDataTableContentOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableContentOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2025261867,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableHeaderCellOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableHeaderCellOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Numeric",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Numeric"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderCellOld"
        }
      },
      {
        "HashCode": -821485835,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableHeaderCellOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableHeaderCellOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Numeric",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Numeric"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderCellOld",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -467044379,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableHeaderCellOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDataTableHeaderCellOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderCellOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1492758781,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableHeaderCellOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDataTableHeaderCellOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderCellOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1134608003,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableHeaderOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableHeaderOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderOld"
        }
      },
      {
        "HashCode": 759624651,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableHeaderOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableHeaderOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderOld",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -576588495,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableHeaderOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDataTableHeaderOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1124767739,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableHeaderOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDataTableHeaderOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 944379466,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StickyHeader",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "StickyHeader"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VirtualScroll",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "VirtualScroll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Paginator",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Paginator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableOld<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 756832241,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StickyHeader",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "StickyHeader"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VirtualScroll",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "VirtualScroll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Paginator",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Paginator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableOld<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1359330354,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableOld<TItem>.Columns",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "MatDataTableOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableOld<TItem>.Columns",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -600298444,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableOld<TItem>.Columns",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "MatBlazor.MatDataTableOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableOld<TItem>.Columns",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 507740152,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableRowOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableRowOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableRowOld"
        }
      },
      {
        "HashCode": -2065379374,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableRowOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableRowOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableRowOld",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1158711290,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableRowOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDataTableRowOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableRowOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -247947174,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableRowOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDataTableRowOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableRowOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 651073539,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDatePickerInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDatePickerInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatDatePickerInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTime",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableSeconds",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableSeconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableCalendar",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableCalendar"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable24hours",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enable24hours"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableWeekNumbers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableWeekNumbers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableMobile",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableMobile"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatDatePickerPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Locale",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Locale"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDatePickerInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 86328071,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDatePickerInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDatePickerInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatDatePickerInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTime",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableSeconds",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableSeconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableCalendar",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableCalendar"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable24hours",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enable24hours"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableWeekNumbers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableWeekNumbers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableMobile",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableMobile"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatDatePickerPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Locale",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Locale"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDatePickerInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 995783353,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDatePickerInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDatePickerInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDatePickerInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -346116254,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDatePickerInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDatePickerInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDatePickerInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1182253938,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogAlert",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogAlert"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogAlert"
        }
      },
      {
        "HashCode": -1076640126,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogAlert",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogAlert"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogAlert",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1062151328,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogAsk",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogAsk"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Answers",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Object>",
            "Metadata": {
              "Common.PropertyName": "Answers"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogAsk"
        }
      },
      {
        "HashCode": 1549106015,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogAsk",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogAsk"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Answers",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Object>",
            "Metadata": {
              "Common.PropertyName": "Answers"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogAsk",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 667738896,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogConfirm",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogConfirm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogConfirm"
        }
      },
      {
        "HashCode": -598694430,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogConfirm",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogConfirm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogConfirm",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1532718816,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogPrompt",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogPrompt"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogPrompt"
        }
      },
      {
        "HashCode": -1476326164,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogPrompt",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogPrompt"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogPrompt",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1403267238,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogServiceItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogServiceItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "DialogReference",
            "TypeName": "MatBlazor.MatDialogReference",
            "Metadata": {
              "Common.PropertyName": "DialogReference"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogServiceItem"
        }
      },
      {
        "HashCode": -70811273,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogServiceItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogServiceItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "DialogReference",
            "TypeName": "MatBlazor.MatDialogReference",
            "Metadata": {
              "Common.PropertyName": "DialogReference"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogServiceItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -44925769,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialog",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialog"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Event occurs when the dialog is opened or closed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CanBeClosed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Indicates if the user is able to close the dialog via Escape or click on the Scrim.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CanBeClosed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceStyle",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialog"
        }
      },
      {
        "HashCode": 531272461,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialog",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialog"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Event occurs when the dialog is opened or closed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CanBeClosed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Indicates if the user is able to close the dialog via Escape or click on the Scrim.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CanBeClosed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceStyle",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialog",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1779234038,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialog.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDialog"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialog.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2130544990,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialog.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDialog"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialog.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -973809320,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogActions",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogActions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogActions"
        }
      },
      {
        "HashCode": 1621291771,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogActions",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogActions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogActions",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -719467089,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialogActions.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDialogActions"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialogActions.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 9259563,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialogActions.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDialogActions"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialogActions.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1238385005,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogContent"
        }
      },
      {
        "HashCode": -1219568834,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -179406369,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialogContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDialogContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialogContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1164354939,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialogContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDialogContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialogContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1256077751,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogTitle",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogTitle"
        }
      },
      {
        "HashCode": -1341093388,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogTitle",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogTitle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1125576287,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialogTitle.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDialogTitle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialogTitle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2026290970,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialogTitle.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDialogTitle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialogTitle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 241164421,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDrawerContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDrawerContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DrawerWidth",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DrawerWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDrawerContainer"
        }
      },
      {
        "HashCode": -1364100118,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDrawerContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDrawerContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DrawerWidth",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DrawerWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDrawerContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 707014153,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDrawerContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDrawerContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDrawerContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -210975225,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDrawerContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDrawerContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDrawerContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1300869840,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDrawerContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDrawerContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDrawerContent"
        }
      },
      {
        "HashCode": -827713343,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDrawerContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDrawerContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDrawerContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -619349599,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDrawerContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDrawerContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDrawerContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1473339363,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDrawerContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDrawerContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDrawerContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -623169472,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDrawer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDrawer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "MatBlazor.MatDrawerMode",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContentTabIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ContentTabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opened",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Opened"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "OpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDrawer"
        }
      },
      {
        "HashCode": 1587079690,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDrawer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDrawer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "MatBlazor.MatDrawerMode",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContentTabIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ContentTabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opened",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Opened"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "OpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDrawer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1825848409,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDrawer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDrawer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDrawer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1255264148,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDrawer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDrawer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDrawer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 278973054,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatFAB",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatFAB"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mini",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Mini"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatFAB"
        }
      },
      {
        "HashCode": -582581995,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatFAB",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatFAB"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mini",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Mini"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatFAB",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1783222392,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatFAB.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatFAB"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatFAB.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1016234755,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatFAB.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatFAB"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatFAB.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -619693177,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatFileUpload",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatFileUpload"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.IMatFileUploadEntry[]>",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowMultiple",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowMultiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageLength",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatFileUpload"
        }
      },
      {
        "HashCode": 1005646534,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatFileUpload",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatFileUpload"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.IMatFileUploadEntry[]>",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowMultiple",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowMultiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageLength",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatFileUpload",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 96307800,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHelperText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHelperText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CharacterCount",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CharacterCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHelperText"
        }
      },
      {
        "HashCode": 678979584,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHelperText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHelperText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CharacterCount",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CharacterCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHelperText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 822231121,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHidden",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHidden"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ElseContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ElseContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InitContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "InitContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Breakpoint",
            "TypeName": "MatBlazor.MatBreakpoint",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Breakpoint"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatHiddenDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HiddenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "HiddenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHidden"
        }
      },
      {
        "HashCode": -453729109,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHidden",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHidden"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ElseContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ElseContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InitContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "InitContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Breakpoint",
            "TypeName": "MatBlazor.MatBreakpoint",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Breakpoint"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatHiddenDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HiddenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "HiddenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHidden",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1619796732,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHidden.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHidden.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 274924556,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHidden.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHidden.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1677752263,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHidden.ElseContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ElseContent",
            "ParentTag": "MatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHidden.ElseContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 499442215,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHidden.ElseContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ElseContent",
            "ParentTag": "MatBlazor.MatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHidden.ElseContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 434651371,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHidden.InitContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InitContent",
            "ParentTag": "MatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHidden.InitContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1601768367,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHidden.InitContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InitContent",
            "ParentTag": "MatBlazor.MatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHidden.InitContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -723915205,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatIconButton",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatIconButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Default Button Icon\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggleIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Icon to use when Button is clicked\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ToggleIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Toggled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Toggled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggledChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ToggledChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Link",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Navigate to this url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Link"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n             Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatIconButton"
        }
      },
      {
        "HashCode": -1055650590,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatIconButton",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatIconButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Default Button Icon\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggleIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Icon to use when Button is clicked\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ToggleIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Toggled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Toggled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggledChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ToggledChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Link",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Navigate to this url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Link"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n             Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatIconButton",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1260129121,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatIconButton.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatIconButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatIconButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1847313591,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatIconButton.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatIconButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatIconButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 862809648,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatIcon",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatIcon"
        }
      },
      {
        "HashCode": 1701792221,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatIcon",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatIcon",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -813006847,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatIcon.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatIcon"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatIcon.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -272460301,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatIcon.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatIcon"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatIcon.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1385410285,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListGroup",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatListGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListGroup"
        }
      },
      {
        "HashCode": 2114824858,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListGroup",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatListGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListGroup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -42994572,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatListGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1632910016,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatListGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -605983502,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListGroupSubHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatListGroupSubHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListGroupSubHeader"
        }
      },
      {
        "HashCode": 1087058782,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListGroupSubHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatListGroupSubHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListGroupSubHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1990553559,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListGroupSubHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatListGroupSubHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListGroupSubHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1779364596,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListGroupSubHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatListGroupSubHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListGroupSubHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -579957690,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatList",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SingleSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "SingleSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TwoLine",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TwoLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatList"
        }
      },
      {
        "HashCode": 760951914,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatList",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SingleSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "SingleSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TwoLine",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TwoLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatList",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 598254271,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatList.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatList.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1042151069,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatList.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatList.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 553411026,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListDivider",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatListDivider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListDivider"
        }
      },
      {
        "HashCode": 1236751438,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListDivider",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatListDivider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListDivider",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 979922326,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatListItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItem"
        }
      },
      {
        "HashCode": 726903879,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatListItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 392055407,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatListItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1983068348,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatListItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1329458907,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItemPrimaryText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatListItemPrimaryText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItemPrimaryText"
        }
      },
      {
        "HashCode": -1459466617,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItemPrimaryText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatListItemPrimaryText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItemPrimaryText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 850244897,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItemPrimaryText.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatListItemPrimaryText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItemPrimaryText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -930741865,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItemPrimaryText.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatListItemPrimaryText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItemPrimaryText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 445269859,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItemSecondaryText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatListItemSecondaryText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItemSecondaryText"
        }
      },
      {
        "HashCode": 1970306723,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItemSecondaryText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatListItemSecondaryText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItemSecondaryText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1428975668,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItemSecondaryText.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatListItemSecondaryText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItemSecondaryText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1935370964,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItemSecondaryText.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatListItemSecondaryText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItemSecondaryText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1173398518,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItemText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatListItemText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItemText"
        }
      },
      {
        "HashCode": 1262095544,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItemText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatListItemText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItemText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1196250997,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItemText.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatListItemText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItemText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -161219296,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItemText.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatListItemText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItemText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1868724252,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatMenu",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatMenu"
        }
      },
      {
        "HashCode": -172476576,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatMenu",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2062663266,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1017610900,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1508336307,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            *Not yet functional - Target of Href when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The title shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NavLinkMatch",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n             NavLinkMatch parameter used to determine the active state of the Nav Item.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NavLinkMatch"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you the Nav Item can be selected / active.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavItem"
        }
      },
      {
        "HashCode": 1559317707,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            *Not yet functional - Target of Href when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The title shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NavLinkMatch",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n             NavLinkMatch parameter used to determine the active state of the Nav Item.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NavLinkMatch"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you the Nav Item can be selected / active.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1950622368,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatNavItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 418616400,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatNavItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1554018718,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavMenu",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multi",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Multi"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavMenu"
        }
      },
      {
        "HashCode": -2025626687,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavMenu",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multi",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Multi"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 947217849,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatNavMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1894818572,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatNavMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1543663351,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavSubMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavSubMenu"
        }
      },
      {
        "HashCode": 1313599436,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavSubMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavSubMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1383315996,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavSubMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatNavSubMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavSubMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -529194432,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavSubMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatNavSubMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavSubMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1827730355,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavSubMenuHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavSubMenuHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The title shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavSubMenuHeader"
        }
      },
      {
        "HashCode": -1967898440,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavSubMenuHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavSubMenuHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The title shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavSubMenuHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 594754050,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavSubMenuHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatNavSubMenuHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavSubMenuHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1052853621,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavSubMenuHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatNavSubMenuHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavSubMenuHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -440888388,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavSubMenuList",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavSubMenuList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavSubMenuList"
        }
      },
      {
        "HashCode": 1702696729,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavSubMenuList",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavSubMenuList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavSubMenuList",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2115539262,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavSubMenuList.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatNavSubMenuList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavSubMenuList.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1403728875,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavSubMenuList.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatNavSubMenuList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavSubMenuList.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2147106446,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNumericUpDownFieldInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatNumericUpDownFieldInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Maximum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Minimum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DecimalPlaces",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "DecimalPlaces"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FieldType",
            "TypeName": "MatBlazor.MatNumericUpDownFieldType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FieldType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNumericUpDownFieldInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1109153205,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNumericUpDownFieldInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatNumericUpDownFieldInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Maximum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Minimum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DecimalPlaces",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "DecimalPlaces"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FieldType",
            "TypeName": "MatBlazor.MatNumericUpDownFieldType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FieldType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNumericUpDownFieldInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1116149825,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNumericUpDownFieldInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatNumericUpDownFieldInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNumericUpDownFieldInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 59027941,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNumericUpDownFieldInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatNumericUpDownFieldInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNumericUpDownFieldInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 966371840,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatPaginator",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatPaginator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatPaginatorPageEvent>",
            "Metadata": {
              "Common.PropertyName": "Page",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "PageIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatPaginator"
        }
      },
      {
        "HashCode": -421529969,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatPaginator",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatPaginator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatPaginatorPageEvent>",
            "Metadata": {
              "Common.PropertyName": "Page",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "PageIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatPaginator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2063770430,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatPaper",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatPaper"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Elevation",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Level of the Elevation. \n            From 0 to 24.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Elevation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses outlined surface. If true, removes Elevation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rounded",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses round border.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Rounded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatPaper"
        }
      },
      {
        "HashCode": 1469227144,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatPaper",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatPaper"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Elevation",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Level of the Elevation. \n            From 0 to 24.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Elevation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses outlined surface. If true, removes Elevation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rounded",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses round border.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Rounded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatPaper",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -745039402,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatPaper.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatPaper"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatPaper.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -585985155,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatPaper.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatPaper"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatPaper.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1095177206,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatPortalHost",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatPortalHost"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatPortalHost"
        }
      },
      {
        "HashCode": -2084044820,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatPortalHost",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatPortalHost"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatPortalHost",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1157259673,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatProgressBar",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatProgressBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Reversed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Reversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Buffer",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Buffer"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatProgressBar"
        }
      },
      {
        "HashCode": 212118631,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatProgressBar",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatProgressBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Reversed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Reversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Buffer",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Buffer"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatProgressBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 916543933,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatProgressCircle",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatProgressCircle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Toggles the component between the determinate and indeterminate state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n            If true, Puts the component in the closed state.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "MatBlazor.MatProgressCircleSize",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets the size of the circular progress bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets the progress bar to this value. Value should be between [0, 1].\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FourColored",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            IF true, Applies four animated stroke-colors to the indeterminate indicator. Applicable to the indeterminate variant only and overrides any single color currently set.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FourColored"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatProgressCircle"
        }
      },
      {
        "HashCode": -14116319,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatProgressCircle",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatProgressCircle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Toggles the component between the determinate and indeterminate state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n            If true, Puts the component in the closed state.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "MatBlazor.MatProgressCircleSize",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets the size of the circular progress bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets the progress bar to this value. Value should be between [0, 1].\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FourColored",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            IF true, Applies four animated stroke-colors to the indeterminate indicator. Applicable to the indeterminate variant only and overrides any single color currently set.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FourColored"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatProgressCircle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1202553048,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioButtonInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatRadioButtonInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioButtonInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioButtonInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1512485971,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioButtonInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatRadioButtonInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioButtonInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioButtonInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -216777435,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioButtonInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatRadioButtonInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioButtonInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -881658827,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioButtonInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatRadioButtonInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioButtonInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1025675350,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioGroupInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -737408081,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioGroupInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1805756503,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1569597927,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1009396352,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatRadioGroupInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1117169033,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatRadioGroupInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1448507670,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRipple",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatRipple"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "MatBlazor.MatRippleColor",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRipple"
        }
      },
      {
        "HashCode": -1318655343,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRipple",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatRipple"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "MatBlazor.MatRippleColor",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRipple",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -471915059,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRipple.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatRipple"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRipple.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 102114396,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRipple.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatRipple"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRipple.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 379851739,
        "Kind": "Components.Component",
        "Name": "MatBlazor.CoreMatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CoreMatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.CoreMatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.CoreMatOption<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -492770706,
        "Kind": "Components.Component",
        "Name": "MatBlazor.CoreMatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.CoreMatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.CoreMatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.CoreMatOption<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1108764559,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.CoreMatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CoreMatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.CoreMatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1312854287,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.CoreMatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.CoreMatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.CoreMatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1904385312,
        "Kind": "Components.Component",
        "Name": "MatBlazor.CoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CoreMatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.CoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TKey",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TKey for the MatBlazor.CoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TKey",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.CoreMatSelect<TValue, TKey>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1559372089,
        "Kind": "Components.Component",
        "Name": "MatBlazor.CoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.CoreMatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.CoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TKey",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TKey for the MatBlazor.CoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TKey",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.CoreMatSelect<TValue, TKey>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 849323136,
        "Kind": "Components.Component",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CoreMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.CoreMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.CoreMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1356209424,
        "Kind": "Components.Component",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.CoreMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.CoreMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.CoreMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2137909187,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "CoreMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1535893799,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.CoreMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2145438188,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CoreMatSelectValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 496080542,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.CoreMatSelectValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -70331847,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSelect<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1521797207,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSelect<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 426840198,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelect<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1499562374,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelect<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 277636891,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSelectItem<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1858872690,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSelectItem<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 671022544,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectItem<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 540766606,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectItem<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1576775483,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectItem<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSelectItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -995450884,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectItem<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSelectItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -542069301,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Metadata": {
              "Common.PropertyName": "ValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 360756296,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Metadata": {
              "Common.PropertyName": "ValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1520177934,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 641067362,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1113073190,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSelectValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -661472017,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSelectValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -359702748,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSlider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSlider<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMin",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMin",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMax",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMax",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Discrete",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Discrete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Markers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Markers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Pin",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Pin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableStep",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Immediate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When set to true, any change to the slider immediately changes the value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Immediate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSlider<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1937055007,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSlider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSlider<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMin",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMin",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMax",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMax",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Discrete",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Discrete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Markers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Markers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Pin",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Pin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableStep",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Immediate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When set to true, any change to the slider immediately changes the value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Immediate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSlider<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1263820831,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSlideToggle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSlideToggle<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSlideToggle<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -962542741,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSlideToggle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSlideToggle<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSlideToggle<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 697946619,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSnackbar",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSnackbar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stacked",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Positions the action buttons below the label instead of alongside it.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stacked"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Leading",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n             Displays the snackbar on the \"leading edge\" of the screen (the left side in LTR, or the right side in RTL). \n            \n             By default, snackbars are centered horizontally within the viewport. On larger screens, they can optionally be displayed on the leading edge by setting this property.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Leading"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Controls whether or not the snackbar is shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Timeout",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Timeout in ms after which the snackbar closes itself. Default: 10000 ms\n            To leave the snackbar open indefinitely set the timeout to -1\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Timeout"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            This event is raised whenever IsOpen changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSnackbar"
        }
      },
      {
        "HashCode": 2103623874,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSnackbar",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSnackbar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stacked",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Positions the action buttons below the label instead of alongside it.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stacked"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Leading",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n             Displays the snackbar on the \"leading edge\" of the screen (the left side in LTR, or the right side in RTL). \n            \n             By default, snackbars are centered horizontally within the viewport. On larger screens, they can optionally be displayed on the leading edge by setting this property.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Leading"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Controls whether or not the snackbar is shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Timeout",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Timeout in ms after which the snackbar closes itself. Default: 10000 ms\n            To leave the snackbar open indefinitely set the timeout to -1\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Timeout"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            This event is raised whenever IsOpen changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSnackbar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1849919211,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSnackbar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSnackbar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSnackbar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1599801977,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSnackbar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSnackbar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSnackbar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -505508595,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSnackbarActions",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSnackbarActions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSnackbarActions"
        }
      },
      {
        "HashCode": 2034948295,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSnackbarActions",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSnackbarActions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSnackbarActions",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1881337048,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSnackbarActions.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSnackbarActions"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSnackbarActions.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1418340538,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSnackbarActions.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSnackbarActions"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSnackbarActions.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1092796833,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSnackbarContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSnackbarContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSnackbarContent"
        }
      },
      {
        "HashCode": 982750367,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSnackbarContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSnackbarContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSnackbarContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1455531025,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSnackbarContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSnackbarContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSnackbarContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1868430034,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSnackbarContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSnackbarContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSnackbarContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -314928121,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSortHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSortHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSortHeader"
        }
      },
      {
        "HashCode": 642567293,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSortHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSortHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSortHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1681166748,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSortHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSortHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSortHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1774824716,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSortHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSortHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSortHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 132599829,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSortHeaderRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortIdChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "SortIdChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatSortDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DirectionChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "Metadata": {
              "Common.PropertyName": "DirectionChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortChangedEvent>",
            "Metadata": {
              "Common.PropertyName": "SortChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow"
        }
      },
      {
        "HashCode": -399274861,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSortHeaderRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortIdChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "SortIdChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatSortDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DirectionChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "Metadata": {
              "Common.PropertyName": "DirectionChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortChangedEvent>",
            "Metadata": {
              "Common.PropertyName": "SortChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 746019509,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSortHeaderRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSortHeaderRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1801956458,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSortHeaderRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSortHeaderRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1661569174,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTabBar",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTabBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Active",
            "TypeName": "MatBlazor.BaseMatTabLabel",
            "Metadata": {
              "Common.PropertyName": "Active"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Metadata": {
              "Common.PropertyName": "ActiveChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTabBar"
        }
      },
      {
        "HashCode": -953070495,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTabBar",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTabBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Active",
            "TypeName": "MatBlazor.BaseMatTabLabel",
            "Metadata": {
              "Common.PropertyName": "Active"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Metadata": {
              "Common.PropertyName": "ActiveChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTabBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1997199620,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTabBar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatTabBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTabBar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1386492090,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTabBar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatTabBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTabBar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -788162884,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTabLabel",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTabLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTabLabel"
        }
      },
      {
        "HashCode": -1904108322,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTabLabel",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTabLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTabLabel",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1286079895,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTabLabel.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatTabLabel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTabLabel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1030373483,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTabLabel.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatTabLabel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTabLabel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1383171234,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTable<TableItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TableItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TableItem for the MatBlazor.MatTable<TableItem> component.",
            "Metadata": {
              "Common.PropertyName": "TableItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MatTableHeader",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "MatTableHeader",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UseSortHeaderRow",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "UseSortHeaderRow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MatTableRow",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TableItem>",
            "Metadata": {
              "Common.PropertyName": "MatTableRow",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizes",
            "TypeName": "MatBlazor.BaseMatTable.PageSizeStructure[]",
            "Documentation": "\n            <summary>\n            Not Functioning\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TableItem>",
            "Documentation": "\n            <summary>\n            Specifies the data for the table.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageSizeParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Descending",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Descending"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DescendingParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DescendingParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortBy",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortBy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortByParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortByParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageRecordCountLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageRecordCountLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingDataPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingDataPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingRecordsCountPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingRecordsCountPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SearchTermParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionChanged",
            "TypeName": "System.Action<System.Object>",
            "Metadata": {
              "Common.PropertyName": "SelectionChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderRowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableHeader row\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderRowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableRow\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you can select a single row.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RequestApiOnlyOnce",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to Request the API only once.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RequestApiOnlyOnce"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DebounceMilliseconds",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the delay duration between user input on the Search Term Field. Default 800\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DebounceMilliseconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterByColumnName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies which column is used for the filter / search term. If this is populated the Search Textbox will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterByColumnName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldLabel",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Label for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldPlaceHolder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Placeholder for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldPlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadInitialData",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies where to Load the Initial Table Data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadInitialData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApiUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the API Url form for the table data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApiUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPaging",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Paging visibility\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPaging"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowFooter",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Table Footer visibility.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowFooter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Striped",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if table has alternating color rows.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Striped"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            The number of rows per page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnRowDbClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Action to execute on row item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnRowDbClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTable<TableItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 168778390,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTable<TableItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TableItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TableItem for the MatBlazor.MatTable<TableItem> component.",
            "Metadata": {
              "Common.PropertyName": "TableItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MatTableHeader",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "MatTableHeader",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UseSortHeaderRow",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "UseSortHeaderRow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MatTableRow",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TableItem>",
            "Metadata": {
              "Common.PropertyName": "MatTableRow",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizes",
            "TypeName": "MatBlazor.BaseMatTable.PageSizeStructure[]",
            "Documentation": "\n            <summary>\n            Not Functioning\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TableItem>",
            "Documentation": "\n            <summary>\n            Specifies the data for the table.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageSizeParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Descending",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Descending"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DescendingParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DescendingParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortBy",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortBy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortByParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortByParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageRecordCountLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageRecordCountLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingDataPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingDataPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingRecordsCountPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingRecordsCountPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SearchTermParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionChanged",
            "TypeName": "System.Action<System.Object>",
            "Metadata": {
              "Common.PropertyName": "SelectionChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderRowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableHeader row\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderRowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableRow\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you can select a single row.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RequestApiOnlyOnce",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to Request the API only once.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RequestApiOnlyOnce"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DebounceMilliseconds",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the delay duration between user input on the Search Term Field. Default 800\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DebounceMilliseconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterByColumnName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies which column is used for the filter / search term. If this is populated the Search Textbox will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterByColumnName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldLabel",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Label for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldPlaceHolder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Placeholder for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldPlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadInitialData",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies where to Load the Initial Table Data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadInitialData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApiUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the API Url form for the table data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApiUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPaging",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Paging visibility\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPaging"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowFooter",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Table Footer visibility.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowFooter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Striped",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if table has alternating color rows.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Striped"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            The number of rows per page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnRowDbClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Action to execute on row item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnRowDbClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTable<TableItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -973748366,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTable<TableItem>.MatTableHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTableHeader",
            "ParentTag": "MatTable"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTable<TableItem>.MatTableHeader",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1010249214,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTable<TableItem>.MatTableHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTableHeader",
            "ParentTag": "MatBlazor.MatTable"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTable<TableItem>.MatTableHeader",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1494570943,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTable<TableItem>.MatTableRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTableRow",
            "ParentTag": "MatTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'MatTableRow' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTable<TableItem>.MatTableRow",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 926591754,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTable<TableItem>.MatTableRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTableRow",
            "ParentTag": "MatBlazor.MatTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'MatTableRow' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTable<TableItem>.MatTableRow",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -33564269,
        "Kind": "Components.Component",
        "Name": "MatBlazor.TableRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TableRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowItem",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "RowItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.TableRow"
        }
      },
      {
        "HashCode": 1169944614,
        "Kind": "Components.Component",
        "Name": "MatBlazor.TableRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.TableRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowItem",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "RowItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.TableRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1976541174,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.TableRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "TableRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.TableRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 833579926,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.TableRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.TableRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.TableRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1867650446,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTab",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTab"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "LabelContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTab"
        }
      },
      {
        "HashCode": -260085301,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTab",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTab"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "LabelContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTab",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1886196761,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTab.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTab.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1357461279,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTab.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTab.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1849534164,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTab.LabelContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LabelContent",
            "ParentTag": "MatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTab.LabelContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1515377915,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTab.LabelContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LabelContent",
            "ParentTag": "MatBlazor.MatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTab.LabelContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -979770577,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTabGroup",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTabGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTabGroup"
        }
      },
      {
        "HashCode": -252331857,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTabGroup",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTabGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTabGroup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -360961593,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTabGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatTabGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTabGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1759179280,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTabGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatTabGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTabGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1017668908,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatInputTextComponent<T>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatInputTextComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter T for the MatBlazor.MatInputTextComponent<T> component.",
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatInputTextComponent<T>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1212322170,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatInputTextComponent<T>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatInputTextComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter T for the MatBlazor.MatInputTextComponent<T> component.",
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatInputTextComponent<T>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1628395351,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatInputTextComponent<T>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatInputTextComponent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatInputTextComponent<T>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -15251353,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatInputTextComponent<T>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatInputTextComponent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatInputTextComponent<T>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1586961907,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatThemeProvider",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatThemeProvider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "MatBlazor.MatTheme",
            "Metadata": {
              "Common.PropertyName": "Theme"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatThemeProvider"
        }
      },
      {
        "HashCode": 1505194403,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatThemeProvider",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatThemeProvider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "MatBlazor.MatTheme",
            "Metadata": {
              "Common.PropertyName": "Theme"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatThemeProvider",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 902244785,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatThemeProvider.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatThemeProvider"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatThemeProvider.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1101087126,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatThemeProvider.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatThemeProvider"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatThemeProvider.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1120836841,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatToastContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatToastContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatToastContainer"
        }
      },
      {
        "HashCode": -298536709,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatToastContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatToastContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatToastContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1473581710,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatToastItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatToastItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Toast",
            "TypeName": "MatBlazor.MatToast",
            "Metadata": {
              "Common.PropertyName": "Toast"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "MatBlazor.MatToastType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatToastItem"
        }
      },
      {
        "HashCode": 1351348619,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatToastItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatToastItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Toast",
            "TypeName": "MatBlazor.MatToast",
            "Metadata": {
              "Common.PropertyName": "Toast"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "MatBlazor.MatToastType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatToastItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1531482377,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatToastItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatToastItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatToastItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1716435792,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatToastItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatToastItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatToastItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 725161783,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTooltip",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "TooltipContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tooltip",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TargetId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Wrap",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Wrap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatTooltipPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTooltip"
        }
      },
      {
        "HashCode": 1949975530,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTooltip",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "TooltipContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tooltip",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TargetId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Wrap",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Wrap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatTooltipPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTooltip",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1756498154,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTooltip.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTooltip.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 652953150,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTooltip.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTooltip.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1828091175,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTooltip.TooltipContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipContent",
            "ParentTag": "MatTooltip"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTooltip.TooltipContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -618023548,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTooltip.TooltipContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipContent",
            "ParentTag": "MatBlazor.MatTooltip"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTooltip.TooltipContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1568412522,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatVirtualScroll<ItemType>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ItemType",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter ItemType for the MatBlazor.MatVirtualScroll<ItemType> component.",
            "Metadata": {
              "Common.PropertyName": "ItemType",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemHeight",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ItemHeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<ItemType>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<ItemType>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatVirtualScroll<ItemType>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1506476625,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatVirtualScroll<ItemType>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ItemType",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter ItemType for the MatBlazor.MatVirtualScroll<ItemType> component.",
            "Metadata": {
              "Common.PropertyName": "ItemType",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemHeight",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ItemHeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<ItemType>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<ItemType>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatVirtualScroll<ItemType>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1357474252,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatVirtualScroll<ItemType>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatVirtualScroll"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatVirtualScroll<ItemType>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1214963162,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatVirtualScroll<ItemType>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatVirtualScroll"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatVirtualScroll<ItemType>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1958289199,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatVirtualScroll<ItemType>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatVirtualScroll<ItemType>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1808189158,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatVirtualScroll<ItemType>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatVirtualScroll<ItemType>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1968758060,
        "Kind": "Components.EventHandler",
        "Name": "onfocus",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocus",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocus:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocus:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfocus"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocus' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfocus' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -879567451,
        "Kind": "Components.EventHandler",
        "Name": "onblur",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onblur",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onblur:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onblur:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onblur",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onblur"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onblur' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onblur' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1393215084,
        "Kind": "Components.EventHandler",
        "Name": "onfocusin",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusin",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusin:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusin:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfocusin",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfocusin"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusin' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfocusin' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2142633421,
        "Kind": "Components.EventHandler",
        "Name": "onfocusout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfocusout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfocusout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfocusout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1240795192,
        "Kind": "Components.EventHandler",
        "Name": "onmouseover",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseover",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseover:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseover:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseover",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseover"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseover' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseover' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1366642137,
        "Kind": "Components.EventHandler",
        "Name": "onmouseout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1686637175,
        "Kind": "Components.EventHandler",
        "Name": "onmousemove",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousemove",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousemove:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousemove:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmousemove",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmousemove"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousemove' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmousemove' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1804557171,
        "Kind": "Components.EventHandler",
        "Name": "onmousedown",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousedown",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousedown:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousedown:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmousedown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmousedown"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousedown' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmousedown' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1320321761,
        "Kind": "Components.EventHandler",
        "Name": "onmouseup",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseup",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseup:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseup:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseup"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseup' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseup' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1402800717,
        "Kind": "Components.EventHandler",
        "Name": "onclick",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclick",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclick:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclick:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onclick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onclick"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onclick' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onclick' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 667594627,
        "Kind": "Components.EventHandler",
        "Name": "ondblclick",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondblclick",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondblclick:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondblclick:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondblclick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondblclick"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondblclick' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondblclick' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -648934944,
        "Kind": "Components.EventHandler",
        "Name": "onwheel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwheel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwheel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwheel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onwheel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>",
            "Documentation": "Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onwheel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwheel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onwheel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.WheelEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1596430166,
        "Kind": "Components.EventHandler",
        "Name": "onmousewheel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousewheel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousewheel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousewheel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmousewheel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>",
            "Documentation": "Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmousewheel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousewheel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmousewheel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.WheelEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1441435986,
        "Kind": "Components.EventHandler",
        "Name": "oncontextmenu",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncontextmenu",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncontextmenu:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncontextmenu:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncontextmenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncontextmenu"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncontextmenu' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncontextmenu' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -915400160,
        "Kind": "Components.EventHandler",
        "Name": "ondrag",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrag",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrag:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrag:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondrag",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondrag"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrag' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondrag' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1530739611,
        "Kind": "Components.EventHandler",
        "Name": "ondragend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1203836586,
        "Kind": "Components.EventHandler",
        "Name": "ondragenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -317286792,
        "Kind": "Components.EventHandler",
        "Name": "ondragleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1729092479,
        "Kind": "Components.EventHandler",
        "Name": "ondragover",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragover",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragover:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragover:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragover",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragover"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragover' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragover' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 208955618,
        "Kind": "Components.EventHandler",
        "Name": "ondragstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1130302392,
        "Kind": "Components.EventHandler",
        "Name": "ondrop",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrop",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrop:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrop:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondrop",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondrop"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrop' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondrop' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1767969563,
        "Kind": "Components.EventHandler",
        "Name": "onkeydown",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeydown",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeydown:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeydown:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onkeydown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Documentation": "Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onkeydown"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeydown' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onkeydown' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1881703430,
        "Kind": "Components.EventHandler",
        "Name": "onkeyup",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeyup",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeyup:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeyup:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onkeyup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Documentation": "Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onkeyup"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeyup' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onkeyup' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 553327689,
        "Kind": "Components.EventHandler",
        "Name": "onkeypress",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeypress",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeypress:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeypress:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onkeypress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Documentation": "Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onkeypress"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeypress' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onkeypress' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 137835829,
        "Kind": "Components.EventHandler",
        "Name": "onchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Documentation": "Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.ChangeEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1477808330,
        "Kind": "Components.EventHandler",
        "Name": "oninput",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninput",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninput:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninput:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oninput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Documentation": "Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oninput"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninput' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oninput' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.ChangeEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1963637034,
        "Kind": "Components.EventHandler",
        "Name": "oninvalid",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninvalid",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninvalid:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninvalid:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oninvalid",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oninvalid"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninvalid' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oninvalid' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -340676662,
        "Kind": "Components.EventHandler",
        "Name": "onreset",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreset",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreset:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreset:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onreset",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onreset"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreset' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onreset' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2115257407,
        "Kind": "Components.EventHandler",
        "Name": "onselect",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselect",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselect:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselect:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onselect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onselect"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselect' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onselect' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2046207483,
        "Kind": "Components.EventHandler",
        "Name": "onselectstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onselectstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onselectstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onselectstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 239498453,
        "Kind": "Components.EventHandler",
        "Name": "onselectionchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectionchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectionchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectionchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onselectionchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onselectionchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectionchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onselectionchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 483739253,
        "Kind": "Components.EventHandler",
        "Name": "onsubmit",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsubmit",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsubmit:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsubmit:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onsubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onsubmit"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsubmit' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onsubmit' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -240005608,
        "Kind": "Components.EventHandler",
        "Name": "onbeforecopy",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecopy",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecopy:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecopy:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforecopy",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforecopy"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecopy' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforecopy' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1022229747,
        "Kind": "Components.EventHandler",
        "Name": "onbeforecut",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecut",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecut:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecut:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforecut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforecut"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecut' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforecut' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1118051837,
        "Kind": "Components.EventHandler",
        "Name": "onbeforepaste",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforepaste",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforepaste:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforepaste:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforepaste",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforepaste"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforepaste' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforepaste' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1382828248,
        "Kind": "Components.EventHandler",
        "Name": "oncopy",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncopy",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncopy:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncopy:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncopy",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
            "Documentation": "Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncopy"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncopy' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncopy' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 96608561,
        "Kind": "Components.EventHandler",
        "Name": "oncut",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncut",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncut:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncut:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
            "Documentation": "Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncut"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncut' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncut' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1473496106,
        "Kind": "Components.EventHandler",
        "Name": "onpaste",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpaste",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpaste:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpaste:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpaste",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
            "Documentation": "Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpaste"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpaste' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpaste' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 780414752,
        "Kind": "Components.EventHandler",
        "Name": "ontouchcancel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchcancel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchcancel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchcancel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchcancel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchcancel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchcancel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchcancel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 462346394,
        "Kind": "Components.EventHandler",
        "Name": "ontouchend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 789386023,
        "Kind": "Components.EventHandler",
        "Name": "ontouchmove",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchmove",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchmove:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchmove:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchmove",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchmove"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchmove' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchmove' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1217245289,
        "Kind": "Components.EventHandler",
        "Name": "ontouchstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -344887325,
        "Kind": "Components.EventHandler",
        "Name": "ontouchenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1320286525,
        "Kind": "Components.EventHandler",
        "Name": "ontouchleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -112019997,
        "Kind": "Components.EventHandler",
        "Name": "ongotpointercapture",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ongotpointercapture",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ongotpointercapture:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ongotpointercapture:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ongotpointercapture",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ongotpointercapture"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ongotpointercapture' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ongotpointercapture' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -521747343,
        "Kind": "Components.EventHandler",
        "Name": "onlostpointercapture",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onlostpointercapture",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onlostpointercapture:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onlostpointercapture:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onlostpointercapture",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onlostpointercapture"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onlostpointercapture' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onlostpointercapture' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2121856026,
        "Kind": "Components.EventHandler",
        "Name": "onpointercancel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointercancel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointercancel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointercancel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointercancel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointercancel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointercancel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointercancel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -266836384,
        "Kind": "Components.EventHandler",
        "Name": "onpointerdown",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerdown",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerdown:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerdown:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerdown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerdown"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerdown' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerdown' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1972271027,
        "Kind": "Components.EventHandler",
        "Name": "onpointerenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1669114891,
        "Kind": "Components.EventHandler",
        "Name": "onpointerleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2012158252,
        "Kind": "Components.EventHandler",
        "Name": "onpointermove",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointermove",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointermove:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointermove:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointermove",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointermove"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointermove' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointermove' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -163721864,
        "Kind": "Components.EventHandler",
        "Name": "onpointerout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 473037006,
        "Kind": "Components.EventHandler",
        "Name": "onpointerover",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerover",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerover:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerover:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerover",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerover"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerover' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerover' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -526480661,
        "Kind": "Components.EventHandler",
        "Name": "onpointerup",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerup",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerup:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerup:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerup"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerup' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerup' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 862090884,
        "Kind": "Components.EventHandler",
        "Name": "oncanplay",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplay",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplay:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplay:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncanplay",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncanplay"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplay' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncanplay' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2123742587,
        "Kind": "Components.EventHandler",
        "Name": "oncanplaythrough",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplaythrough",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplaythrough:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplaythrough:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncanplaythrough",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncanplaythrough"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplaythrough' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncanplaythrough' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 403434316,
        "Kind": "Components.EventHandler",
        "Name": "oncuechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncuechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncuechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncuechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncuechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncuechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncuechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncuechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1964068441,
        "Kind": "Components.EventHandler",
        "Name": "ondurationchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondurationchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondurationchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondurationchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondurationchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondurationchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondurationchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondurationchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1639413033,
        "Kind": "Components.EventHandler",
        "Name": "onemptied",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onemptied",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onemptied:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onemptied:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onemptied",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onemptied"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onemptied' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onemptied' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1411192210,
        "Kind": "Components.EventHandler",
        "Name": "onpause",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpause",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpause:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpause:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpause",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpause"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpause' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpause' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1370946327,
        "Kind": "Components.EventHandler",
        "Name": "onplay",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplay",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplay:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplay:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onplay",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onplay"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplay' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onplay' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1690364510,
        "Kind": "Components.EventHandler",
        "Name": "onplaying",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplaying",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplaying:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplaying:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onplaying",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onplaying"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplaying' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onplaying' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1551652789,
        "Kind": "Components.EventHandler",
        "Name": "onratechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onratechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onratechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onratechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onratechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onratechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onratechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onratechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 8029832,
        "Kind": "Components.EventHandler",
        "Name": "onseeked",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeked",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeked:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeked:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onseeked",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onseeked"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeked' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onseeked' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1064886691,
        "Kind": "Components.EventHandler",
        "Name": "onseeking",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeking",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeking:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeking:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onseeking",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onseeking"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeking' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onseeking' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -914642414,
        "Kind": "Components.EventHandler",
        "Name": "onstalled",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstalled",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstalled:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstalled:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onstalled",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onstalled"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstalled' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onstalled' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1958432924,
        "Kind": "Components.EventHandler",
        "Name": "onstop",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstop",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstop:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstop:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onstop",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onstop"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstop' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onstop' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 518328424,
        "Kind": "Components.EventHandler",
        "Name": "onsuspend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsuspend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsuspend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsuspend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onsuspend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onsuspend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsuspend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onsuspend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 112725102,
        "Kind": "Components.EventHandler",
        "Name": "ontimeupdate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeupdate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeupdate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeupdate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontimeupdate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontimeupdate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeupdate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontimeupdate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -197597400,
        "Kind": "Components.EventHandler",
        "Name": "onvolumechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onvolumechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onvolumechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onvolumechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onvolumechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onvolumechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onvolumechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onvolumechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1891416581,
        "Kind": "Components.EventHandler",
        "Name": "onwaiting",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwaiting",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwaiting:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwaiting:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onwaiting",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onwaiting"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwaiting' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onwaiting' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1138819513,
        "Kind": "Components.EventHandler",
        "Name": "onloadstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1194934532,
        "Kind": "Components.EventHandler",
        "Name": "ontimeout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontimeout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontimeout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontimeout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -17975861,
        "Kind": "Components.EventHandler",
        "Name": "onabort",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onabort",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onabort:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onabort:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onabort",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onabort"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onabort' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onabort' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1340226873,
        "Kind": "Components.EventHandler",
        "Name": "onload",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onload",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onload:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onload:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onload",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onload"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onload' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onload' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -140852849,
        "Kind": "Components.EventHandler",
        "Name": "onloadend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -87943860,
        "Kind": "Components.EventHandler",
        "Name": "onprogress",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onprogress",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onprogress:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onprogress:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onprogress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onprogress"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onprogress' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onprogress' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -740753714,
        "Kind": "Components.EventHandler",
        "Name": "onerror",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onerror",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onerror:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onerror:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onerror",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ErrorEventArgs>",
            "Documentation": "Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onerror"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onerror' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onerror' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ErrorEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1863313814,
        "Kind": "Components.EventHandler",
        "Name": "onactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 233817481,
        "Kind": "Components.EventHandler",
        "Name": "onbeforeactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforeactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforeactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforeactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforeactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforeactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforeactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforeactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1322412921,
        "Kind": "Components.EventHandler",
        "Name": "onbeforedeactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforedeactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforedeactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforedeactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforedeactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforedeactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforedeactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforedeactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -101314850,
        "Kind": "Components.EventHandler",
        "Name": "ondeactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondeactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondeactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondeactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondeactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondeactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondeactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondeactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1076329494,
        "Kind": "Components.EventHandler",
        "Name": "onended",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onended",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onended:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onended:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onended",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onended"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onended' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onended' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 278550056,
        "Kind": "Components.EventHandler",
        "Name": "onfullscreenchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfullscreenchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfullscreenchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfullscreenchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 619126763,
        "Kind": "Components.EventHandler",
        "Name": "onfullscreenerror",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenerror",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenerror:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenerror:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfullscreenerror",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfullscreenerror"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenerror' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfullscreenerror' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2063514148,
        "Kind": "Components.EventHandler",
        "Name": "onloadeddata",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadeddata",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadeddata:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadeddata:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadeddata",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadeddata"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadeddata' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadeddata' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1253516541,
        "Kind": "Components.EventHandler",
        "Name": "onloadedmetadata",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadedmetadata",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadedmetadata:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadedmetadata:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadedmetadata",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadedmetadata"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadedmetadata' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadedmetadata' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1867591513,
        "Kind": "Components.EventHandler",
        "Name": "onpointerlockchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerlockchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerlockchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerlockchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 2143237065,
        "Kind": "Components.EventHandler",
        "Name": "onpointerlockerror",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockerror",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockerror:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockerror:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerlockerror",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerlockerror"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockerror' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerlockerror' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1936584460,
        "Kind": "Components.EventHandler",
        "Name": "onreadystatechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreadystatechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreadystatechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreadystatechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onreadystatechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onreadystatechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreadystatechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onreadystatechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -500993264,
        "Kind": "Components.EventHandler",
        "Name": "onscroll",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onscroll",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onscroll:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onscroll:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onscroll",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onscroll"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onscroll' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onscroll' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 2021480870,
        "Kind": "Components.EventHandler",
        "Name": "ontoggle",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontoggle",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontoggle:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontoggle:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontoggle",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontoggle"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontoggle' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontoggle' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2059976231,
        "Kind": "Components.Splat",
        "Name": "Attributes",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Merges a collection of attributes into the current element or component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@attributes",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Splat",
            "Name": "@attributes",
            "TypeName": "System.Object",
            "Documentation": "Merges a collection of attributes into the current element or component.",
            "Metadata": {
              "Common.PropertyName": "Attributes",
              "Common.DirectiveAttribute": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Splat",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Attributes"
        }
      },
      {
        "HashCode": -822893015,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@bind-",
                "NameComparison": 1,
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-...",
            "TypeName": "System.Collections.Generic.Dictionary<string, object>",
            "IndexerNamePrefix": "@bind-",
            "IndexerTypeName": "System.Object",
            "Documentation": "Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the corresponding bind attribute. For example: <code>@bind-value:format=\"...\"</code> will apply a format string to the value specified in <code>@bind-value=\"...\"</code>. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-...' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.Fallback": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Bind"
        }
      },
      {
        "HashCode": -91513619,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 1241860411,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -848570565,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "checkbox",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_checked"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_checked"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-checked",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_checked"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "checked",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "checkbox",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -1132106323,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "text",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "text",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 385071387,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "number",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "number",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -1221680988,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "number",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "number",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -1154470291,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "date",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-dd",
          "Components.Bind.TypeAttribute": "date",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -72800040,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "date",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-dd",
          "Components.Bind.TypeAttribute": "date",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -424276399,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "datetime-local",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-ddTHH:mm:ss",
          "Components.Bind.TypeAttribute": "datetime-local",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -853478571,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "datetime-local",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-ddTHH:mm:ss",
          "Components.Bind.TypeAttribute": "datetime-local",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -558616756,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "month",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM",
          "Components.Bind.TypeAttribute": "month",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -369487248,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "month",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM",
          "Components.Bind.TypeAttribute": "month",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -485992532,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "time",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "HH:mm:ss",
          "Components.Bind.TypeAttribute": "time",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 360244712,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "time",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "HH:mm:ss",
          "Components.Bind.TypeAttribute": "time",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -802572407,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "select",
            "Attributes": [
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 1977040696,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "textarea",
            "Attributes": [
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -931316321,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
        }
      },
      {
        "HashCode": 2005369795,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2738578,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputDate",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>"
        }
      },
      {
        "HashCode": 1458816990,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 692823198,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputNumber",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>"
        }
      },
      {
        "HashCode": -1961244320,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1647978881,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputRadioGroup",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>"
        }
      },
      {
        "HashCode": -1335719979,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -567671496,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>"
        }
      },
      {
        "HashCode": 189861180,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1339322630,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputText",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText"
        }
      },
      {
        "HashCode": 231886708,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputText",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1423162954,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputTextArea",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
        }
      },
      {
        "HashCode": -1627470334,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -59003710,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatExpansionPanel",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatExpansionPanel",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "MatBlazor.MatExpansionPanel"
        }
      },
      {
        "HashCode": 1448882261,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatExpansionPanel",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatExpansionPanel",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "MatBlazor.MatExpansionPanel",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -481010218,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatAutocompleteList",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "MatBlazor.BaseMatAutocompleteList<TItem>"
        }
      },
      {
        "HashCode": 538164532,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatAutocompleteList",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "MatBlazor.BaseMatAutocompleteList<TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1935370389,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatAutocomplete",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>"
        }
      },
      {
        "HashCode": -1460484035,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatAutocomplete",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1758003205,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatCheckboxInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatCheckboxInternal<TValue>"
        }
      },
      {
        "HashCode": 408832164,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatCheckboxInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatCheckboxInternal<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 417166390,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatCheckbox<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatCheckbox<TValue>"
        }
      },
      {
        "HashCode": 702550617,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatCheckbox<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatCheckbox<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1476236560,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatChipSet",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SelectedChip' property and a change event delegate to the 'SelectedChipChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatChipSet",
            "Attributes": [
              {
                "Name": "@bind-SelectedChip",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedChip",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>",
            "Documentation": "Binds the provided expression to the 'SelectedChip' property and a change event delegate to the 'SelectedChipChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedChip"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedChip",
          "Components.Bind.ChangeAttribute": "SelectedChipChanged",
          "Common.TypeName": "MatBlazor.MatChipSet"
        }
      },
      {
        "HashCode": -929547294,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatChipSet",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatChipSet",
            "Attributes": [
              {
                "Name": "@bind-SelectedChips",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedChips",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip[]>",
            "Documentation": "Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedChips"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedChips",
          "Components.Bind.ChangeAttribute": "SelectedChipsChanged",
          "Common.TypeName": "MatBlazor.MatChipSet"
        }
      },
      {
        "HashCode": -2128371342,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatChipSet",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SelectedChip' property and a change event delegate to the 'SelectedChipChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatChipSet",
            "Attributes": [
              {
                "Name": "@bind-SelectedChip",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedChip",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>",
            "Documentation": "Binds the provided expression to the 'SelectedChip' property and a change event delegate to the 'SelectedChipChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedChip"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedChip",
          "Components.Bind.ChangeAttribute": "SelectedChipChanged",
          "Common.TypeName": "MatBlazor.MatChipSet",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 190474210,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatChipSet",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatChipSet",
            "Attributes": [
              {
                "Name": "@bind-SelectedChips",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedChips",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip[]>",
            "Documentation": "Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedChips"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedChips",
          "Components.Bind.ChangeAttribute": "SelectedChipsChanged",
          "Common.TypeName": "MatBlazor.MatChipSet",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1945857936,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatChip",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsSelected' property and a change event delegate to the 'IsSelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatChip",
            "Attributes": [
              {
                "Name": "@bind-IsSelected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsSelected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsSelected' property and a change event delegate to the 'IsSelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsSelected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsSelected",
          "Components.Bind.ChangeAttribute": "IsSelectedChanged",
          "Common.TypeName": "MatBlazor.MatChip"
        }
      },
      {
        "HashCode": -256484463,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatChip",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsSelected' property and a change event delegate to the 'IsSelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatChip",
            "Attributes": [
              {
                "Name": "@bind-IsSelected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsSelected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsSelected' property and a change event delegate to the 'IsSelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsSelected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsSelected",
          "Components.Bind.ChangeAttribute": "IsSelectedChanged",
          "Common.TypeName": "MatBlazor.MatChip",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -910906028,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDatePicker<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDatePicker",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatDatePicker<TValue>"
        }
      },
      {
        "HashCode": 1496676563,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDatePicker<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDatePicker",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatDatePicker<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -783725099,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatDialog",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDialog",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.BaseMatDialog"
        }
      },
      {
        "HashCode": -715000294,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatDialog",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDialog",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.BaseMatDialog",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1321948919,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatDrawer",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDrawer",
            "Attributes": [
              {
                "Name": "@bind-Opened",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Opened",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Opened"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Opened",
          "Components.Bind.ChangeAttribute": "OpenedChanged",
          "Common.TypeName": "MatBlazor.BaseMatDrawer"
        }
      },
      {
        "HashCode": -236908156,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatDrawer",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDrawer",
            "Attributes": [
              {
                "Name": "@bind-Opened",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Opened",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Opened"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Opened",
          "Components.Bind.ChangeAttribute": "OpenedChanged",
          "Common.TypeName": "MatBlazor.BaseMatDrawer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -395841041,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatIconButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatIconButton",
            "Attributes": [
              {
                "Name": "@bind-Toggled",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Toggled",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Toggled"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Toggled",
          "Components.Bind.ChangeAttribute": "ToggledChanged",
          "Common.TypeName": "MatBlazor.BaseMatIconButton"
        }
      },
      {
        "HashCode": 808382238,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatIconButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatIconButton",
            "Attributes": [
              {
                "Name": "@bind-Toggled",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Toggled",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Toggled"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Toggled",
          "Components.Bind.ChangeAttribute": "ToggledChanged",
          "Common.TypeName": "MatBlazor.BaseMatIconButton",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 249889773,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNavItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNavItem",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.BaseMatNavItem"
        }
      },
      {
        "HashCode": 2069177380,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNavItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNavItem",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.BaseMatNavItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1192003407,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu"
        }
      },
      {
        "HashCode": 1398617416,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu"
        }
      },
      {
        "HashCode": 2034974106,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1919692483,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1447419255,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNumericUpDownFieldInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>"
        }
      },
      {
        "HashCode": -2033315994,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNumericUpDownFieldInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1430878677,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNumericUpDownField<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNumericUpDownField",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatNumericUpDownField<TValue>"
        }
      },
      {
        "HashCode": 1607318933,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNumericUpDownField<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNumericUpDownField",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatNumericUpDownField<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2076110422,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatRadioGroupInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>"
        }
      },
      {
        "HashCode": -457514284,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatRadioGroupInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1424498832,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatRadioGroup<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatRadioGroup",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>"
        }
      },
      {
        "HashCode": -904031622,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatRadioGroup<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatRadioGroup",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -251367528,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseCoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseCoreMatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseCoreMatSelect<TValue, TKey>"
        }
      },
      {
        "HashCode": 1829590709,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseCoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseCoreMatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseCoreMatSelect<TValue, TKey>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 141714171,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSelect<TValue>"
        }
      },
      {
        "HashCode": -512601563,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSelect<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1182763433,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSelectItem",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>"
        }
      },
      {
        "HashCode": 99519045,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSelectItem",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 911524440,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSelectValue",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>"
        }
      },
      {
        "HashCode": 1926721486,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSelectValue",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1513684250,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSlider",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSlider<TValue>"
        }
      },
      {
        "HashCode": 818685322,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSlider",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSlider<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1977669606,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSlideToggle",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSlideToggle<TValue>"
        }
      },
      {
        "HashCode": -1119514338,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSlideToggle",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSlideToggle<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1439800978,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSnackbar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSnackbar",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.BaseMatSnackbar"
        }
      },
      {
        "HashCode": -1626787587,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSnackbar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSnackbar",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.BaseMatSnackbar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1999287979,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-SortId",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SortId",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SortId"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SortId",
          "Components.Bind.ChangeAttribute": "SortIdChanged",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow"
        }
      },
      {
        "HashCode": -1523609388,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-Direction",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Direction",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "IsEnum": true,
            "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Direction"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Direction",
          "Components.Bind.ChangeAttribute": "DirectionChanged",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow"
        }
      },
      {
        "HashCode": 1539395440,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-SortId",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SortId",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SortId"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SortId",
          "Components.Bind.ChangeAttribute": "SortIdChanged",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1549202161,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-Direction",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Direction",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "IsEnum": true,
            "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Direction"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Direction",
          "Components.Bind.ChangeAttribute": "DirectionChanged",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1566769886,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTabBar",
            "Attributes": [
              {
                "Name": "@bind-Active",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Active",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Active"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Active",
          "Components.Bind.ChangeAttribute": "ActiveChanged",
          "Common.TypeName": "MatBlazor.BaseMatTabBar"
        }
      },
      {
        "HashCode": 1997437725,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTabBar",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.BaseMatTabBar"
        }
      },
      {
        "HashCode": -499354791,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTabBar",
            "Attributes": [
              {
                "Name": "@bind-Active",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Active",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Active"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Active",
          "Components.Bind.ChangeAttribute": "ActiveChanged",
          "Common.TypeName": "MatBlazor.BaseMatTabBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1744288746,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTabBar",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.BaseMatTabBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1884322789,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseTableRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseTableRow",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.BaseTableRow"
        }
      },
      {
        "HashCode": -598993787,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseTableRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseTableRow",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.BaseTableRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1736429097,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatTabGroup",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTabGroup",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.BaseMatTabGroup"
        }
      },
      {
        "HashCode": -1754151113,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatTabGroup",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTabGroup",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.BaseMatTabGroup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1080407412,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatStringField",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatStringField",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatStringField"
        }
      },
      {
        "HashCode": -2058313343,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatStringField",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatStringField",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatStringField",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1411721192,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTextField<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTextField",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatTextField<TValue>"
        }
      },
      {
        "HashCode": -1168167691,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTextField<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTextField",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatTextField<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -125419156,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTreeView<TNode>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SelectedNode' property and a change event delegate to the 'SelectedNodeChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTreeView",
            "Attributes": [
              {
                "Name": "@bind-SelectedNode",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedNode",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TNode>",
            "Documentation": "Binds the provided expression to the 'SelectedNode' property and a change event delegate to the 'SelectedNodeChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedNode"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedNode",
          "Components.Bind.ChangeAttribute": "SelectedNodeChanged",
          "Common.TypeName": "MatBlazor.MatTreeView<TNode>"
        }
      },
      {
        "HashCode": 100552342,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTreeView<TNode>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SelectedNode' property and a change event delegate to the 'SelectedNodeChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTreeView",
            "Attributes": [
              {
                "Name": "@bind-SelectedNode",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedNode",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TNode>",
            "Documentation": "Binds the provided expression to the 'SelectedNode' property and a change event delegate to the 'SelectedNodeChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedNode"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedNode",
          "Components.Bind.ChangeAttribute": "SelectedNodeChanged",
          "Common.TypeName": "MatBlazor.MatTreeView<TNode>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1873199603,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAutocompleteList",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "MatBlazor.MatAutocompleteList<TItem>"
        }
      },
      {
        "HashCode": 1431301664,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAutocompleteList",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "MatBlazor.MatAutocompleteList<TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 794382101,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAutocomplete",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>"
        }
      },
      {
        "HashCode": 1899279486,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAutocomplete",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -476358441,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCheckboxInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatCheckboxInternal<TValue>"
        }
      },
      {
        "HashCode": 915927112,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCheckboxInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatCheckboxInternal<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1075979484,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDatePickerInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDatePickerInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatDatePickerInternal<TValue>"
        }
      },
      {
        "HashCode": -1972239364,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDatePickerInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDatePickerInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatDatePickerInternal<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1443977863,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDialog",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialog",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.MatDialog"
        }
      },
      {
        "HashCode": -2095049194,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDialog",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialog",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.MatDialog",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1135375453,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDrawer",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDrawer",
            "Attributes": [
              {
                "Name": "@bind-Opened",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Opened",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Opened"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Opened",
          "Components.Bind.ChangeAttribute": "OpenedChanged",
          "Common.TypeName": "MatBlazor.MatDrawer"
        }
      },
      {
        "HashCode": -1164557622,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDrawer",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDrawer",
            "Attributes": [
              {
                "Name": "@bind-Opened",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Opened",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Opened"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Opened",
          "Components.Bind.ChangeAttribute": "OpenedChanged",
          "Common.TypeName": "MatBlazor.MatDrawer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -109712995,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatIconButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatIconButton",
            "Attributes": [
              {
                "Name": "@bind-Toggled",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Toggled",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Toggled"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Toggled",
          "Components.Bind.ChangeAttribute": "ToggledChanged",
          "Common.TypeName": "MatBlazor.MatIconButton"
        }
      },
      {
        "HashCode": 236220667,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatIconButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatIconButton",
            "Attributes": [
              {
                "Name": "@bind-Toggled",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Toggled",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Toggled"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Toggled",
          "Components.Bind.ChangeAttribute": "ToggledChanged",
          "Common.TypeName": "MatBlazor.MatIconButton",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1999122903,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNavItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavItem",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.MatNavItem"
        }
      },
      {
        "HashCode": -64595403,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNavItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavItem",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.MatNavItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1054305675,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.MatNavSubMenu"
        }
      },
      {
        "HashCode": 61766143,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "MatBlazor.MatNavSubMenu"
        }
      },
      {
        "HashCode": -888014360,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.MatNavSubMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1365982464,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "MatBlazor.MatNavSubMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -674277968,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNumericUpDownFieldInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatNumericUpDownFieldInternal<TValue>"
        }
      },
      {
        "HashCode": 1214257115,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNumericUpDownFieldInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatNumericUpDownFieldInternal<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1480899903,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatRadioGroupInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>"
        }
      },
      {
        "HashCode": -2133889716,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatRadioGroupInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 554383338,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.CoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CoreMatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.CoreMatSelect<TValue, TKey>"
        }
      },
      {
        "HashCode": -766218826,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.CoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.CoreMatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.CoreMatSelect<TValue, TKey>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 41826299,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CoreMatSelectValue",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>"
        }
      },
      {
        "HashCode": 552620695,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.CoreMatSelectValue",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1055271817,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSelect<TValue>"
        }
      },
      {
        "HashCode": -1003242000,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSelect<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1121485985,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSelectItem",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>"
        }
      },
      {
        "HashCode": 1525731519,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSelectItem",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1832806955,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSelectValue",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>"
        }
      },
      {
        "HashCode": -710297082,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSelectValue",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1344822291,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSlider",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSlider<TValue>"
        }
      },
      {
        "HashCode": 77063916,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSlider",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSlider<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 691090509,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSlideToggle",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSlideToggle<TValue>"
        }
      },
      {
        "HashCode": 2028441524,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSlideToggle",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSlideToggle<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1282175617,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSnackbar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSnackbar",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.MatSnackbar"
        }
      },
      {
        "HashCode": 1354923429,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSnackbar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSnackbar",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.MatSnackbar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 960656515,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-SortId",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SortId",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SortId"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SortId",
          "Components.Bind.ChangeAttribute": "SortIdChanged",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow"
        }
      },
      {
        "HashCode": 1585373694,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-Direction",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Direction",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "IsEnum": true,
            "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Direction"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Direction",
          "Components.Bind.ChangeAttribute": "DirectionChanged",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow"
        }
      },
      {
        "HashCode": -672302928,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-SortId",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SortId",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SortId"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SortId",
          "Components.Bind.ChangeAttribute": "SortIdChanged",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1310993355,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-Direction",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Direction",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "IsEnum": true,
            "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Direction"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Direction",
          "Components.Bind.ChangeAttribute": "DirectionChanged",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -219318365,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTabBar",
            "Attributes": [
              {
                "Name": "@bind-Active",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Active",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Active"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Active",
          "Components.Bind.ChangeAttribute": "ActiveChanged",
          "Common.TypeName": "MatBlazor.MatTabBar"
        }
      },
      {
        "HashCode": -534296387,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTabBar",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.MatTabBar"
        }
      },
      {
        "HashCode": 1222614766,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTabBar",
            "Attributes": [
              {
                "Name": "@bind-Active",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Active",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Active"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Active",
          "Components.Bind.ChangeAttribute": "ActiveChanged",
          "Common.TypeName": "MatBlazor.MatTabBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -387679093,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTabBar",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.MatTabBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1208721301,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.TableRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TableRow",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.TableRow"
        }
      },
      {
        "HashCode": 2126510822,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.TableRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.TableRow",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.TableRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1055186688,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTabGroup",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTabGroup",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.MatTabGroup"
        }
      },
      {
        "HashCode": -49359557,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTabGroup",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTabGroup",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.MatTabGroup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1550715069,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatInputTextComponent<T>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatInputTextComponent",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatInputTextComponent<T>"
        }
      },
      {
        "HashCode": 1043736061,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatInputTextComponent<T>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatInputTextComponent",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatInputTextComponent<T>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 470269105,
        "Kind": "Components.Ref",
        "Name": "Ref",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Populates the specified field or property with a reference to the element or component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ref",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Ref",
            "Name": "@ref",
            "TypeName": "System.Object",
            "Documentation": "Populates the specified field or property with a reference to the element or component.",
            "Metadata": {
              "Common.PropertyName": "Ref",
              "Common.DirectiveAttribute": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Ref",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Ref"
        }
      },
      {
        "HashCode": 1789035394,
        "Kind": "Components.Key",
        "Name": "Key",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@key",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Key",
            "Name": "@key",
            "TypeName": "System.Object",
            "Documentation": "Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.",
            "Metadata": {
              "Common.PropertyName": "Key",
              "Common.DirectiveAttribute": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Key",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Key"
        }
      }
    ],
    "CSharpLanguageVersion": 1000
  },
  "RootNamespace": "Pokedex",
  "Documents": [
    {
      "FilePath": "d:\\WebDev\\Projects\\blazor-pokedex\\Pokedex\\Shared\\SurveyPrompt.razor",
      "TargetPath": "Shared\\SurveyPrompt.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "d:\\WebDev\\Projects\\blazor-pokedex\\Pokedex\\Shared\\Components\\PokemonCard.razor",
      "TargetPath": "Shared\\Components\\PokemonCard.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "d:\\WebDev\\Projects\\blazor-pokedex\\Pokedex\\Shared\\Components\\PokemonTypes.razor",
      "TargetPath": "Shared\\Components\\PokemonTypes.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "d:\\WebDev\\Projects\\blazor-pokedex\\Pokedex\\Shared\\MainLayout.razor",
      "TargetPath": "Shared\\MainLayout.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "d:\\WebDev\\Projects\\blazor-pokedex\\Pokedex\\Pages\\PokemonDetails.razor",
      "TargetPath": "Pages\\PokemonDetails.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "d:\\WebDev\\Projects\\blazor-pokedex\\Pokedex\\Shared\\NavMenu.razor",
      "TargetPath": "Shared\\NavMenu.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "d:\\WebDev\\Projects\\blazor-pokedex\\Pokedex\\Pages\\Counter.razor",
      "TargetPath": "Pages\\Counter.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "d:\\WebDev\\Projects\\blazor-pokedex\\Pokedex\\App.razor",
      "TargetPath": "App.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "d:\\WebDev\\Projects\\blazor-pokedex\\Pokedex\\_Imports.razor",
      "TargetPath": "_Imports.razor",
      "FileKind": "componentImport"
    },
    {
      "FilePath": "d:\\WebDev\\Projects\\blazor-pokedex\\Pokedex\\Pages\\Index.razor",
      "TargetPath": "Pages\\Index.razor",
      "FileKind": "component"
    }
  ],
  "SerializationFormat": "0.2"
}